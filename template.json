{
    "version": "2",
    "templates": [{
        "title": "MariaDB",   
        "description": "[Mariadb](https://mariadb.org/) is one of the most popular database servers. Made by the original developers of MySQL.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png",
        "platform": "linux",
        "type": 1,
        "name": "MariaDB", 
        "image": "linuxserver/mariadb:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3306:3306/tcp"
        ],
        "volumes": [{
            "bind": "MariaDB",
            "container": "/config"
        }],
        "categories": [
            "Need",
            "Database"
        ]
    },{
        "title": "PHPMyAdmin",
        "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "PHPMyAdmin",
        "image": "linuxserver/phpmyadmin:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "88:80/tcp"
        ],
        "volumes": [{
            "bind": "PHPMyAdmin",
            "container": "/config"
        }],
        "env": [{
            "default": "127.0.0.1",
            "description": "IP of the MariaDB",
            "label": "PMA_HOSTS",
            "name": "PMA_HOSTS"
        },{
            "default": "99999999999999",
            "description": "Max Upload File Size",
            "label": "UPLOAD_LIMIT",
            "name": "UPLOAD_LIMIT",
            "preset":true
        }],
        "categories": [
            "Need",
            "Database"
        ]
    },{
        "title": "MediaWiki",
        "description": "[MediaWiki] is free and open-source wiki software. Originally developed by Magnus Manske and improved by Lee Daniel Crocker, it runs on many websites, including Wikipedia, Wiktionary and Wikimedia Commons. It is written in the PHP programming language and stores the contents into a database. Like WordPress, which is based on a similar licensing and architecture, it has become the dominant software in its category.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/27b797857efd9253c0981c09696f579a167062d4/mediawiki/logo.svg",
        "platform": "linux",
        "type": 1,
        "name": "MediaWiki",
        "image": "mediawiki:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "89:80/tcp"
        ],
        "volumes": [{
            "bind": "MediaWiki",
            "container": "/var/www/html"
        }],
        "categories": [
            "Need",
            "Wiki"
        ]
    },{
        "title": "Firefox",
        "description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Firefox",
        "image": " jlesage/firefox",
        "restart_policy": "unless-stopped",
        "ports": [
            "5800:5800/tcp"
        ],
        "volumes": [{
            "bind": "Firefox",
            "container": "/config"
        }],
        "env": [{
            "default": "admin",
            "description": "VNC_PASSWORD",
            "label": "VNC_PASSWORD",
            "name": "VNC_PASSWORD"
        },{
            "default": "1",
            "description": "DARK_MODE",
            "label": "DARK_MODE",
            "name": "DARK_MODE",
            "preset":true
        }],
        "categories": [
            "Need",
            "Browser"
        ]
    },{
        "title": "Audio-Book-Shelf",
        "description": "Audiobookshelf is a web-based audiobook server that allows you to manage and listen to your audiobooks.",
        "type": 1,
        "name": "Audio-Book-Shelfs",
        "image": "ghcr.io/advplyr/audiobookshelf",
        "ports": [
            "4040:80/tcp"
        ]
    },{
        "title": "Ubuntu",
        "description": "[Webtop](https://github.com/linuxserver/docker-webtop) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Ubuntu",
        "image": "linuxserver/webtop:ubuntu-kde",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "security_opt": ["seccomp=unconfined"],
        "ports": [
            "3002:3000/tcp"
        ],
        "volumes": [{
            "bind": "Ubuntu",
            "container": "/config"
        },{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "env": [{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "Page Title",
            "description": "TITLE",
            "label": "TITLE",
            "name": "TITLE"
        },{
            "default": "Admin",
            "description": "CUSTOM_USER",
            "label": "CUSTOM_USER",
            "name": "CUSTOM_USER"
        },{
            "default": "Admin",
            "description": "PASSWORD",
            "label": "PASSWORD",
            "name": "PASSWORD"
        }],
        "host_config": {
            "shm_size": 1073741824
        },
        "categories": [
            "Need",
            "Linux"
        ]
    },{
        "title": "Guacamole",
        "description": "[Guacamole] is A clientless remote desktop gateway.",
        "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/guacamole.png",
        "platform": "linux",
        "type": 1,
        "name": "Guacamole",
        "image": "oznu/guacamole:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Guacamole",
            "container": "/config"
        }],
        "categories": [
            "Need",
            "VNC"
        ]
    },{
        "title": "Hue",
        "description": "A Container running Hue",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Hue",
        "image": "gethue/hue:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8888:8888/tcp"
        ],
        "volumes": [{
            "bind": "Hue",
            "container": "usr/share/hue/desktop/conf"
        }],
        "categories": [
            "Need",
            "Database",
            "Monitoring"
        ]
    },{
        "title": "Splunk",
        "description": "Splunk",
        "note": "Run Splunk on Docker",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Splunk",
        "image": "splunk/splunk:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp",
            "8088:8088/tcp",
            "8089:8089/tcp",
            "8191:8191/tcp",
            "9887:9887/tcp",
            "9997:9997/tcp"
        ],
        "volumes": [{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "env": [{
            "default": "--accept-license ",
            "description": "SPLUNK_START_ARGS ",
            "label": "SPLUNK_START_ARGS ",
            "name": "SPLUNK_START_ARGS ",
            "preset":true
        },{
            "default": "admin ",
            "description": "SPLUNK_PASSWORD ",
            "label": "SPLUNK_PASSWORD ",
            "name": "SPLUNK_PASSWORD "
        }],
        "categories": [
            "Need",
            "Monitoring"
        ]
    },{
        "title": "Uptime Kuma",
        "description": "It is a self-hosted monitoring tool like Uptime Robot",
        "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
        "platform": "linux",
        "type": 1,
        "name": "Uptime-Kuma",
        "image": "louislam/uptime-kuma:latest",
        "restart_policy": "always",
        "ports": [
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "UptimeKuma",
            "container": "/app/data"
        }],
        "categories": [
            "Need",
            "Monitoring"
        ]
    },{
        "title": "Dozzle",
        "description": "View Logs for Docker Containers",
        "note": "",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Dozzle",
        "image": "amir20/dozzle",
        "restart_policy": "unless-stopped",
        "ports": [
            "8081:8080/tcp"
        ],
        "volumes": [{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "env": [{
            "default": "admin",
            "description": "username ",
            "label": "username ",
            "name": "username "
        },{
            "default": "admin",
            "description": "password ",
            "label": "password ",
            "name": "password "
        }],
        "categories": [
            "Need",
            "Monitoring"
        ]
    },{
        "title": "AdGuard",
        "description": "[AdGuard] Home is a network-wide software for blocking ads & tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/adguard.png",
        "platform": "linux",
        "type": 1,
        "name": "AdGuard",
        "image": "adguard/adguardhome:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "53:53/tcp",
            "53:53/udp",
            "67:67/udp",
            "68:68/tcp",
            "68:68/udp",
            "80:80/tcp",
            "443:443/tcp",
            "853:853/tcp",
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "Adguard/WorkDIR",
            "container": "/opt/adguardhome/work"
        },{
            "bind": "Adguard/Conf",
            "container": "/opt/adguardhome/conf"
        }],
        "env": [{
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH",
            "set": "adguard home"
        }],
        "categories": [
            "AdBlocker"
        ]
    },{
        "title": "AdGuardHome-Sync",
        "description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "AdGuardHome-Sync",
        "image": "linuxserver/adguardhome-sync:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8080:8080"
        ],
        "volumes": [{
            "bind": "AdGuardHome-Sync",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "/config/adguardhome-sync.yaml",
            "description": "Set a custom config file.",
            "label": "CONFIGFILE",
            "name": "CONFIGFILE"
        }],
        "categories": [
            "VPN"
        ]
    },{
        "title": "Airsonic",
        "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/airsonic-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "airsonic",
        "image": "linuxserver/airsonic:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "4040:4040/tcp"
        ],
        "volumes": [{
            "bind": "Airsonic-Music",
            "container": "/music"
        },{
            "bind": "Airsonic-Playlists",
            "container": "/playlists"
        },{
            "bind": "Airsonic-Podcasts",
            "container": "/podcasts"
        },{
            "bind": "Airsonic-Media",
            "container": "/media"
        },{
            "bind": "Airsonic-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
        },{
            "default": "",
            "description": "",
            "label": "JAVA_OPTS",
            "name": "JAVA_OPTS"
        }],
        "categories": [
          "Music"
        ]
    },{
        "title": "AirSonic-Advanced",
        "description": "[Airsonic-advanced](https://github.com/airsonic-advanced/airsonic-advanced) is a free, web-based media streamer, providing ubiquitous access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "AirSonic-Advanced",
        "image": "linuxserver/airsonic-advanced:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "4040:4040"
        ],
        "volumes": [{
            "bind": "AirSonic-Advanced-Config",
            "container": "/config"
        },{
            "bind": "AirSonic-Advanced-Music",
            "container": "/music"
        },{
            "bind": "AirSonic-Advanced-Playlists",
            "container": "/playlists"
        },{
            "bind": "AirSonic-Advanced-Podcasts",
            "container": "/podcasts"
        },{
            "bind": "AirSonic-Advanced-Media",
            "container": "/media"
        }],
        "env": [{
            "default": "1000",
            "description": "",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
        },{
            "default": "",
            "description": "",
            "label": "JAVA_OPTS",
            "name": "JAVA_OPTS"
        }],
        "categories": [
            "Music",
            "Audiobook"
        ]
    },{
        "title": "Apprise-API",
        "description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
        "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Apprise-API",
        "image": "linuxserver/apprise-api:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "Apprise-API",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Notifications"
        ]
    },{
        "title": "Audacity",
        "description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Audacity",
        "image": "linuxserver/audacity:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "audacity/config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }]
    },{
        "title": "Authelia",
        "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
        "note": "Requires a configuration.yml file in order to work. Documentation is available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/authelia.png",
        "platform": "linux",
        "type": 1,
        "name": "Authelia",
        "image": "authelia/authelia:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "9091:9091/tcp"
        ],
        "volumes": [{
            "bind": "Authelia",
            "container": "/etc/authelia/"
        }],
        "env": [{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
        }],
        "categories": [
            "Authentication"
        ]
    },{
        "title": "BabyBuddy",
        "description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guesswork.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "BabyBuddy",
        "image": "linuxserver/babybuddy:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8000:8000"
        ],
        "volumes": [{
            "bind": "BabyBuddy",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        },{
            "default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
            "name": "CSRF_TRUSTED_ORIGINS",
            "label": "CSRF_TRUSTED_ORIGINS",
            "description": "Add any address you'd like to access Babybuddy at (comma separated, no spaces)"
        }],
        "categories": [
            "Baby"
        ]
    },{
        "title": "Bazarr",
        "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bazarr.png",
        "platform": "linux",
        "type": 1,
        "name": "Bazarr",
        "image": "linuxserver/bazarr:latest",
        "ports": [
            "6767:6767/tcp"
        ],
        "volumes": [{
            "bind": "Bazarr-Config",
            "container": "/config"
        },{
            "bind": "Bazarr-TV",
            "container": "/tv"
        },{
            "bind": "Bazarr-Movies",
            "container": "/movies"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "100",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Movies",
            "Music"
        ]
    },{
        "title": "Beets",
        "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/beets-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "beets",
        "image": "linuxserver/beets:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8337:8337/tcp"
        ],
        "volumes": [{
            "bind": "Beets-Config",
            "container": "/config"
        },{
            "bind": "Beets-Downloads",
            "container": "/downloads"
        },{
            "bind": "Beets-Music",
            "container": "/music"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Music"
        ]
    },{
        "title": "Boinc",
        "description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
        "platform": "linux",
        "type": 1,
        "name": "Boinc",
        "image": "linuxserver/boinc:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8080:8080",
          "8181:8181"
        ],
        "volumes": [{
            "bind": "Boinc",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        },{
            "default": "admin",
            "name": "PASSWORD",
            "label": "PASSWORD",
            "description": "Optionally set a password for the GUI."
        }],
        "categories": [
            "Research"
          ]
    },{
        "title": "Bitwarden RS",
        "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
        "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
        "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/bitwarden.png",
        "platform": "linux",
        "type": 1,
        "name": "Bitwarden-RS",
        "image": "bitwardenrs/server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Bitwarden-RS",
            "container": "/config"
        }],
        "categories": [
            "Other",
            "Tools"
        ]
    },{
        "title": "Blender",
        "description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Blender",
        "image": "linuxserver/blender:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3010:3000/tcp"
        ],
        "volumes": [{
            "bind": "Blender",
            "container": "/config"
        }],
        "env": [{
            "name": "SUBFOLDER",
            "label": "SUBFOLDER",
            "default": "/",
            "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Booksonic",
        "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/booksonic.png",
        "platform": "linux",
        "type": 1,
        "name": "Booksonic",
        "image": "linuxserver/booksonic:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4040:4040/tcp"
        ],
        "volumes": [{
            "bind": "Booksonic-Config",
            "container": "/config"
        },{
            "bind": "Booksonic-Audiobooks",
            "container": "/audiobooks"
        },{
            "bind": "Booksonic-Podcasts",
            "container": "/podcasts"
        },{
            "bind": "Booksonic-Othermedia",
            "container": "/othermedia"
        }],
        "env": [{
            "default": "url-base",
            "description": "Base url for use with reverse proxies etc.",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Audiobook"
        ]
    },{
        "title": "Booksonic-Air",
        "description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. Booksonic App - An DSub based Android app for connection to Booksonic-Air servers. .",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
        "platform": "linux",
        "type": 1,
        "name": "Booksonic-Air",
        "image": "linuxserver/booksonic-air:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4041:4040/tcp"
        ],
        "volumes": [{
            "bind": "BooksonicAir-Config",
            "container": "/config"
        },{
            "bind": "BooksonicAir-Audiobooks",
            "container": "/audiobooks"
        },{
            "bind": "BooksonicAir-Podcasts",
            "container": "/podcasts"
        },{
            "bind": "BooksonicAir-Othermedia",
            "container": "/othermedia"
        }],
        "env": [{
            "default": "url-base",
            "description": "Base url for use with reverse proxies etc.",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Audiobook"
        ]
    },{
        "title": "Bookstack",
        "description": "[Bookstack](https://github.com/BookStackApp/BookStack) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
        "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
        "platform": "linux",
        "type": 1,
        "name": "Bookstack",
        "image": "linuxserver/bookstack:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "6875:80/tcp"
        ],
        "volumes": [{
            "bind": "Bookstack",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "https://bookstack.mydomain.com",
            "description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`",
            "label": "APP_URL",
            "name": "APP_URL"
        },{
            "default": "127.0.0.1",
            "description": "for specifying the database host",
            "label": "DB_HOST",
            "name": "DB_HOST"
        },{
            "default": "admin",
            "description": "for specifying the database user",
            "label": "DB_USER",
            "name": "DB_USER"
        },{
            "default": "admin",
            "description": "for specifying the database password",
            "label": "DB_PASS",
            "name": "DB_PASS"
        },{
            "default": "bookstackapp",
            "description": "for specifying the database to be used",
            "label": "DB_DATABASE",
            "name": "DB_DATABASE"
        }],
        "categories": [
            "Media"
        ]
    },{
        "title": "Budge",
        "description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Budge",
        "image": "linuxserver/budge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80",
            "443:443"
        ],
        "volumes": [{
            "bind": "/volume1/docker/budge/config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Finance"
        ]
    },{
        "title": "Caddy",
        "description": "HTTP/2 web server with automatic HTTPS",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
        "platform": "linux",
        "type": 1,
        "name": "Caddy",
        "image": "caddy:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Caddy",
            "container": "/data"
        }],
        "categories": [
            "Webserver"
        ]
    },{
        "title": "Calibre",
        "description": "[Calibre](https://calibre-ebook.com/) is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.",
        "logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
        "platform": "linux",
        "type": 1,
        "name": "Calibre",
        "image": "linuxserver/calibre:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp",
            "8081:8081/tcp"
        ],
        "volumes": [{
            "bind": "Calibre",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "admin",
            "description": "Optionally set a password for the gui.",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "",
            "description": "Optionally pass cli start arguments to calibre.",
            "label": "CLI_ARGS",
            "name": "CLI_ARGS"
        }],
        "categories": [
            "Media"
        ]
    },{
        "title": "Calibre Web",
        "description": "Calibre Web is a web app providing a clean interface for browsing, reading, and downloading eBooks using an existing Calibre database.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/calibre-web-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "calibre-web",
        "image": "linuxserver/calibre-web:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8083:8083/tcp"
        ],
        "volumes": [{
            "bind": "CalibreWeb-Books",
            "container": "/books"
        },{
            "bind": "CalibreWeb-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Cloud",
            "Books"
        ]
    },{
        "title": "Cardigann",
        "description": "Cardigann is a server for adding extra indexers to Sonarr, SickRage, and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes, Cardigann logs in and runs searches and then transforms the results into a compatible format.",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
        "platform": "linux",
        "type": 1,
        "name": "Cardigann",
        "image": "linuxserver/cardigann:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "5060:5060/tcp"
        ],
        "volumes": [
          {
            "bind": "Cardigann",
            "container": "/config"
          }
        ],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "100",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Downloaders"
        ]
    },{
        "title": "Changedetection.io",
        "description": "[Changedetection.io](https://github.com/dgtlmoon/changedetection.io) provides free, open-source web page monitoring, notification and change detection.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "ChangeDetection.io",
        "image": "linuxserver/changedetection.io:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5000:5000"
        ],
        "volumes": [{
                "bind": "ChangeDetection",
                "container": "/config"
            }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Specify the full URL (including protocol) when running behind a reverse proxy",
            "label": "BASE_URL",
            "name": "BASE_URL"
        }],
        "categories": [
            "Monitoring"
        ]
    },{
        "title": "Chevereto",
        "description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full-featured image hosting website in just minutes. Please note that this offers only the free Chevereto version.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/Chevereto.png",
        "platform": "linux",
        "type": 1,
        "name": "Chevereto",
        "image": "nmtan/chevereto:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Chevereto",
            "container": "/var/www/html/images"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "127.0.0.1",
            "description": "Database host",
            "label": "CHEVERETO_DB_HOST",
            "name": "CHEVERETO_DB_HOST"
        },{
            "default": "admin",
            "description": "Database username",
            "label": "CHEVERETO_DB_USERNAME",
            "name": "CHEVERETO_DB_USERNAME"
        },{
            "default": "admin",
            "description": "Database password",
            "label": "CHEVERETO_DB_PASSWORD",
            "name": "CHEVERETO_DB_PASSWORD"
        },{
            "default": "Chevereto",
            "description": "Database name",
            "label": "CHEVERETO_DB_NAME",
            "name": "CHEVERETO_DB_NAME"
        },{
            "default": "",
            "description": "Database table prefix",
            "label": "CHEVERETO_DB_PREFIX",
            "name": "CHEVERETO_DB_PREFIX"
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/Chicago",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "ChowDown",
        "description": "Save recipes in seconds with plain text formatting and create beautiful recipe pages with automated ease.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/chowdown.png",
        "platform": "linux",
        "type": 1,
        "name": "ChowDown",
        "image": "gregyankovoy/chowdown:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4000:4000/tcp"
        ],
        "volumes": [{
            "bind": "ChowDown",
            "container": "/config"
        }],
        "categories": [
            "Automation"
        ]
    },{
        "title": "Chromium",
        "description": "PHP is a server-side scripting language designed for web development, but which can also be used as a general-purpose programming language. PHP can be added to straight HTML or it can be used with a variety of templating engines and web frameworks. PHP code is usually processed by an interpreter, which is either implemented as a native module on the web-server or as a common gateway interface (CGI).",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/01c12653951b2fe592c1f93a13b4e289ada0e3a1/php/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Chromium",
        "image": "linuxserver/chromium:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "90:80/tcp"
        ],
        "volumes": [{
            "bind": "Chrome",
            "container": "/config"
        }],
        "env": [{
            "default": "admin",
            "description": "Username",
            "label": "CUSTOM_USER",
            "name": "CUSTOM_USER"
        },{
            "default": "admin",
            "description": "To Access the site",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "host_config": {
            "shm_size": 1073741824
        },
        "categories": [
            "Browser"
        ]
    },{
        "title": "Cloud9",
        "description": "[Cloud9](https://github.com/c9/core) Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
        "platform": "linux",
        "type": 1,
        "name": "Cloud9",
        "image": "linuxserver/cloud9:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8001:8000/tcp"
        ],
        "volumes": [{
            "bind": "Cloud9-Config",
            "container": "/config"
        },{
            "bind": "Cloud9-Code",
            "container": "/code"
        },{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "env": [{
            "default": "https://github.com/linuxserver/docker-cloud9.git",
            "description": "Specify a git repo to checkout on first startup",
            "label": "GITURL",
            "name": "GITURL"
        },{
            "default": "",
            "description": "Optionally specify a username for http auth",
            "label": "USERNAME",
            "name": "USERNAME"
        },{
            "default": "",
            "description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)",
            "label": "PASSWORD",
            "name": "PASSWORD"
        }],
        "categories": [
            "Development"
        ]
    },{
        
        "title": "CockroachDB",
        "description": "CockroachDB cluster",
        "note": "Deploys an insecure CockroachDB cluster, please refer to <a href='https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html' target='_blank'>CockroachDB documentation</a> for production deployments.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
        "type": 2,
        "platform": "linux",
        "name": "CockroachDB",
        "repository": {
            "url": "https://github.com/mikestraney/portainer-templates",
            "stackfile": "stacks/cockroachdb/docker-stack.yml"
        },
        "categories": [
            "database"
        ]
    },{
        "title": "Code-Server",
        "description": "[Code-Server](https://coder.com) is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Code-Server",
        "image": "linuxserver/code-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8443:8443/tcp"
        ],
        "volumes": [{
            "bind": "Code-Server",
            "container": "/config"
        }],
        "env": [{
            "default": "password",
            "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth.",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "",
            "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below.",
            "label": "HASHED_PASSWORD",
            "name": "HASHED_PASSWORD"
        },{
            "default": "password",
            "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.",
            "label": "SUDO_PASSWORD",
            "name": "SUDO_PASSWORD"
        },{
            "default": "",
            "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
            "label": "SUDO_PASSWORD_HASH",
            "name": "SUDO_PASSWORD_HASH"
        },{
            "default": "code-server.my.domain",
            "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)",
            "label": "PROXY_DOMAIN",
            "name": "PROXY_DOMAIN"
        },{
            "default": "/config/workspace",
            "description": "If this optional variable is set, code-server will open this directory by default",
            "label": "DEFAULT_WORKSPACE",
            "name": "DEFAULT_WORKSPACE"
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "Codiad",
        "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/codiad-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Cdiad",
        "image": "linuxserver/codiad:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "90:80/tcp"
        ],
        "volumes": [{
            "bind": "Codiad",
            "container": "/config"
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "CommandBox",
        "description": "ColdFusion (CFML) CLI",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
        "platform": "linux",
        "type": 1,
        "name": "CommandBox",
        "image": "ortussolutions/commandbox:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8080/tcp", 
            "8443:8443/tcp"
        ],
        "env": [{
            "default": "lucee@4.5",
            "name": "CFENGINE",
            "preset": true
        }],
        "categories": [
            "Development"
        ]
    },{
        
        "title": "ContentBox",
        "description": "Open-source modular CMS",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
        "platform": "linux",
        "type": 1,
        "name": "ContentBox",
        "image": "ortussolutions/contentbox:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp", 
            "8443:8443/tcp"
        ],
        "volumes": [{
            "bind": "ContentBox-DB",
            "container": "/data/contentbox/db"
        },{
            "bind": "ContentBox-Media",
            "container": "/app/includes/shared/media"
        }],
        "env": [{
            "default": "true",
            "name": "express",
            "preset": true
        },{
            "default": "true",
            "name": "install",
            "preset": true
        },{
            "default": "lucee@4.5",
            "name": "CFENGINE",
            "preset": true
        }],
        "categories": [
            "CMS"
        ]
    },{
        "title": "Cops",
        "description": "Cops by Sébastien Lucas, stands for Calibre OPDS (and HTML) Php Server. COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides an OPDS feed to connect to your devices. Changes in your Calibre library are reflected immediately in your COPS pages. See COPS's home for more details. Don't forget to check the Wiki.\n\n## Why? (taken from the author's site)\nIn my opinion, Calibre is a marvelous tool but is too big and has too many dependencies to be used for its content server. That's the main reason why I coded this OPDS server. I needed a simple tool to be installed on a small server (Seagate Dockstar in my case). I initially thought of Calibre2OPDS, but as it generates static files, no search was possible. Later I added a simple HTML catalog that should be usable on my Kobo. So COPS's main advantages are:\n\n* No need for many dependencies.\n* No need for a lot of CPU or RAM.\n* Not much code.\n* Search is available.\n* With Dropbox/owncloud, it's very easy to have an up-to-date OPDS server.\n* It was fun to code.\n\nIf you want to use the OPDS feed, don't forget to specify feed.php at the end of your URL.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Cops",
        "image": "linuxserver/cops:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Cops-Config",
            "container": "/config"
        },{
            "bind": "Cops-Books",
            "container": "/books"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Books"
        ]
    },{
        "title": "CouchPotato",
        "description": "Couchpotato is an automatic NZB and torrent downloader. You can keep a 'movies I want' list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
        "logo": "https://couchpota.to/media/images/full.png",
        "platform": "linux",
        "type": 1,
        "name": "CouchPotato",
        "image": "linuxserver/couchpotato:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5050:5050/tcp"
        ],
        "volumes": [{
            "bind": "CouchPotato-Config",
            "container": "/config"
        },{
            "bind": "CouchPotato-Downloads",
            "container": "/downloads"
        },{
            "bind": "CouchPotato-Movies",
            "container": "/movies"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Media"
        ]
    },{
        "title": "CrateDB",
        "description": "An open-source distributed SQL database",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
        "platform": "linux",
        "type": 1,
        "name": "CrateDB",
        "image": "crate:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4200:4200/tcp", 
            "4300:4300/tcp"
        ],
        "volumes": [{
            "bind": "CrateDB",
            "container": "/data"
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Daapd",
        "description": "[Daapd](https://owntone.github.io/owntone-server/) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png",
        "platform": "linux",
        "type": 1,
        "name": "Daapd",
        "image": "linuxserver/daapd:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "volumes": [{
            "bind": "Daapd-Config",
            "container": "/config"
        },{
            "bind": "Daapd-Music",
            "container": "/music"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Media"
        ]
    },{
        "title": "DashMachine",
        "description": "Another application bookmark dashboard, with fun features.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/dashmachine_logo.png",
        "platform": "linux",
        "type": 1,
        "name": "dashmachine",
        "image": "rmountjoy/dashmachine:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5000:5000/tcp"
        ],
        "volumes": [{
            "bind": "Dashmachine",
            "container": "/dashmachine/dashmachine/user_data"
        }],
        "categories": [
            "Bookmarks"
        ]
    },{
        "title": "Datadog agent",
        "description": "Collect events and metrics",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
        "platform": "linux",
        "type": 1,
        "name": "Datadog-Agent",
        "image": "datadog/agent:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock",
            "readonly": true
        },{
            "bind": "/sys/fs/cgroup",
            "container": "/host/sys/fs/cgroup",
            "readonly": true
        },{
            "bind": "/proc",
            "container": "/host/proc",
            "readonly": true
        }],
        "env": [{
            "default": "/",
            "name": "DD_API_KEY",
            "label": "Datadog API key"
        }],
        "categories": [
            "Monitoring"
        ]
      },{
        "title": "DarkTable",
        "description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "DarkTable",
        "image": "linuxserver/darktable:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "DarkTable",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "Davos",
        "description": "[Davos](https://github.com/linuxserver/davos) is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
        "logo": "https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG",
        "platform": "linux",
        "type": 1,
        "name": "Davos",
        "image": "linuxserver/davos:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Davos-Config",
            "container": "/config"
        },{
            "bind": "Davos-Download",
            "container": "/download"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "DDClient",
        "description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "DDClient",
        "image": "linuxserver/ddclient:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "DDClient",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Networking"
        ]
    },{
        "title": "DeeMix",
        "description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
        "note": "Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to <a href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'>this page</a> for userToken details.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/deemix.png",
        "platform": "linux",
        "type": 1,
        "name": "deemix",
        "image": "registry.gitlab.com/bockiii/deemix-docker",
        "restart_policy": "unless-stopped",
        "ports": [
            "6595:6595/tcp"
        ],
        "volumes": [{
            "bind": "DeeMix-Config",
            "container": "/config"
        },{
            "bind": "DeeMix-Downloads",
            "container": "/downloads"
        }],
        "categories": [
            "Music"
        ]
    },{
        "title": "Deluge",
        "description": "[Deluge](http://deluge-torrent.org/) is a lightweight, Free Software, cross-platform BitTorrent client. * Full Encryption * WebUI * Plugin System * Much more...",
        "logo": "https://avatars2.githubusercontent.com/u/6733935?v=3&s=200",
        "platform": "linux",
        "type": 1,
        "name": "Deluge",
        "image": "linuxserver/deluge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8112:8112/tcp",
            "6881:6881/tcp",
            "6881:6881/udp"
        ],
        "volumes": [{
            "bind": "Deluge-Config",
            "container": "/config"
        },{
            "bind": "Deluge-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "error",
            "description": "set the loglevel output when running Deluge, default is info for deluged and warning for deluged-web",
            "label": "DELUGE_LOGLEVEL",
            "name": "DELUGE_LOGLEVEL"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Deluge openvpn",
        "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Deluge-OpenVPN",
        "image": "sgtsquiggs/deluge-openvpn:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8112:8112/tcp"
        ],
        "volumes": [{
            "bind": "/etc/localtime",
            "container": "/etc/localtime"
        },{
            "bind": "Deluge-OpenVPN-Downloads",
            "container": "/downloads"
        },{
            "bind": "Deluge-OpenVPN-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PUID",
            "preset":true
        },{
            "default": "MULLVAD",
            "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
            "label": "OPENVPN_PROVIDER",
            "name": "OPENVPN_PROVIDER"
        },{
            "default": "admin",
            "label": "OPENVPN_USERNAME",
            "name": "OPENVPN_USERNAME"
        },{
            "default": "admin",
            "label": "OPENVPN_PASSWORD",
            "name": "OPENVPN_PASSWORD"
        }],
        "categories": [
            "VPN"
        ]
    },{
        "title": "Digikam",
        "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
        "platform": "linux",
        "type": 1,
        "name": "Digikam",
        "image": "linuxserver/digikam:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "ports": [
            "3011:3000/tcp"
        ],
        "volumes": [{
            "bind": "Digikam",
            "container": "/config"
        }],
        "env": [{
            "default": "/",
            "name": "SUBFOLDER",
            "label": "SUBFOLDER",
            "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Dillinger",
        "description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
        "platform": "linux",
        "type": 1,
        "name": "Dillinger",
        "image": "linuxserver/dillinger:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Dillinger-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone, for example, America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "Diskover",
        "description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
        "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
        "platform": "linux",
        "type": 1,
        "name": "Diskover",
        "image": "linuxserver/diskover:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Diskover-Config",
            "container": "/config"
        },{
            "bind": "Diskover-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "elasticsearch",
            "description": "ElasticSearch host (optional)",
            "label": "ES_HOST",
            "name": "ES_HOST"
        },{
            "default": "9200",
            "description": "ElasticSearch port (optional)",
            "label": "ES_PORT",
            "name": "ES_PORT"
        },{
            "default": "admin",
            "description": "ElasticSearch username (optional)",
            "label": "ES_USER",
            "name": "ES_USER"
        },{
            "default": "admin",
            "description": "ElasticSearch password (optional)",
            "label": "ES_PASS",
            "name": "ES_PASS"
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "Docker-Compose",
        "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Docker-Compose",
        "image": "linuxserver/docker-compose:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "91:80/tcp"
        ],
        "volumes": [{
            "bind": "Docker-Compose",
            "container": "/config"
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "Dokku",
        "description": "Dokku setup as a container",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Dokku",
        "image":"dokku/dokku",
        "restart_policy": "unless-stopped",
        "ports": [
            "22/tcp", 
            "80/tcp", 
            "443/tcp"
        ],
        "volumes": [{
            "container": "Dokku",
            "bind": "/var/lib/dokku"
        },{
            "container": "/var/run/docker.sock",
            "bind": "/var/run/docker.sock"
        }],
        "env":[{
            "default": "admin",
            "name": "DOKKU_HOSTNAME",
            "label": "Dokku hostname",
            "description": "Global hostname to be registered by Dokku"
        },{
            "default": "/var/lib/dokku/home/dokku",
            "name": "DOKKU_HOST_ROOT",
            "label": "Dokku host root",
            "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }],
        "categories": [
            "PaaS"
        ]
    },{
        "title": "DokuWiki",
        "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "DokuWiki",
        "image": "linuxserver/dokuwiki:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "85:80/tcp",
            "445:443/tcp"
        ],
        "volumes": [{
            "bind": "DokuWiki",
            "container": "/config"
        }],
        "categories": [
            "Wiki"
        ]
    },{
        "title": "Domoticz",
        "description": "[Domoticz](https://www.domoticz.com) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
        "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Domoticz",
        "image": "linuxserver/domoticz:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8081:8080/tcp",
            "6144:6144/tcp",
            "1443:1443/tcp"
        ],
        "volumes": [{
            "bind": "Domoticz",
            "container": "/config"
        }],
        "env": [{
            "default": "domoticz",
            "description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying.",
            "label": "WEBROOT",
            "name": "WEBROOT"
        }],
        "categories": [
            "Automation"
        ]
    },{
        "title": "DopLarr",
        "description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
        "platform": "linux",
        "type": 1,
        "name": "DopLarr",
        "image": "linuxserver/doplarr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80"
        ],
        "volumes": [
            {
                "bind": "DopLarr",
                "container": "/config"
            }
        ],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Specify your discord bot token.",
            "label": "DISCORD__TOKEN",
            "name": "DISCORD__TOKEN"
        },{
            "default": "",
            "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr.",
            "label": "OVERSEERR__API",
            "name": "OVERSEERR__API"
        },{
            "default": "http://localhost:5055",
            "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr.",
            "label": "OVERSEERR__URL",
            "name": "OVERSEERR__URL"
        },{
            "default": "",
            "description": "Specify your Radarr API key. Leave blank if using Overseerr.",
            "label": "RADARR__API",
            "name": "RADARR__API"
        },{
            "default": "http://localhost:7878",
            "description": "Specify your Radarr URL. Leave blank if using Overseerr.",
            "label": "RADARR__URL",
            "name": "RADARR__URL"
        },{
            "default": "",
            "description": "Specify your Sonarr API key. Leave blank if using Overseerr.",
            "label": "SONARR__API",
            "name": "SONARR__API"
        },{
            "default": "http://localhost:8989",
            "description": "Specify your Sonarr URL. Leave blank if using Overseerr.",
            "label": "SONARR__URL",
            "name": "SONARR__URL"
        },{
            "default": "25",
            "description": "Sets the maximum size of the search results selection",
            "label": "DISCORD__MAX_RESULTS",
            "name": "DISCORD__MAX_RESULTS"
        },{
            "default": ":plain",
            "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`",
            "label": "DISCORD__REQUESTED_MSG_STYLE",
            "name": "DISCORD__REQUESTED_MSG_STYLE"
        },{
            "default": "",
            "description": "The name of the quality profile to use by default for Sonarr",
            "label": "SONARR__QUALITY_PROFILE",
            "name": "SONARR__QUALITY_PROFILE"
        },{
            "default": "",
            "description": "The name of the quality profile to use by default for Radarr",
            "label": "RADARR__QUALITY_PROFILE",
            "name": "RADARR__QUALITY_PROFILE"
        },{
            "default": "",
            "description": "The root folder to use by default for Sonarr",
            "label": "SONARR__ROOTFOLDER",
            "name": "SONARR__ROOTFOLDER"
        },{
            "default": "",
            "description": "The root folder to use by default for Radarr",
            "label": "RADARR__ROOTFOLDER",
            "name": "RADARR__ROOTFOLDER"
        },{
            "default": "",
            "description": "The name of the language profile to use by default for Sonarr",
            "label": "SONARR__LANGUAGE_PROFILE",
            "name": "SONARR__LANGUAGE_PROFILE"
        },{
            "default": "",
            "description": "The Overseerr user id to use by default if there is no associated discord account for the requester",
            "label": "OVERSEERR__DEFAULT_ID",
            "name": "OVERSEERR__DEFAULT_ID"
        },{
            "default": "true",
            "description": "Sets whether users can request partial seasons.",
            "label": "PARTIAL_SEASONS",
            "name": "PARTIAL_SEASONS"
        },{
            "default": ":info",
            "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`",
            "label": "LOG_LEVEL",
            "name": "LOG_LEVEL"
        },{
            "default": "",
            "description": "For passing additional java options.",
            "label": "JAVA_OPTS",
            "name": "JAVA_OPTS"
        }],
        "categories": [
            "Bot",
            "Discord"
        ]
    },{
        "title": "DoubleCommander",
        "description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "DoubleCommander",
        "image": "linuxserver/doublecommander:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3012:3000/tcp"
        ],
        "volumes": [{
            "bind": "DoubleCommander-Config",
            "container": "/config"
        },{
            "bind": "DoubleCommander-Data",
            "container": "/data"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Dradis",
        "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dradis-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Dradis",
        "image": "raesene/dradis:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "categories": [
            "Security"
        ]
    },{
        "title": "DuckDNS",
        "description": "[Duckdns](https://duckdns.org/) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
        "platform": "linux",
        "type": 1,
        "name": "DuckDNS",
        "image": "linuxserver/duckdns:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "DuckDNS",
            "container": "/config"
        }],
        "env": [{
            "default": "subdomain1,subdomain2",
            "description": "multiple subdomains allowed, comma separated, no spaces",
            "label": "SUBDOMAINS",
            "name": "SUBDOMAINS"
        },{
            "default": "token",
            "description": "DuckDNS token",
            "label": "TOKEN",
            "name": "TOKEN"
        },{
            "default": "false",
            "description": "Set to `true` to log to file (also need to map /config).",
            "label": "LOG_FILE",
            "name": "LOG_FILE"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Duplicati",
        "description": "[Duplicati](https://www.duplicati.com/) works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Duplicati",
        "image": "linuxserver/duplicati:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8200:8200/tcp"
        ],
        "volumes": [{
            "bind": "Duplicati-Config",
            "container": "/config"
        },{
            "bind": "Duplicati-Backups",
            "container": "/backups"
        },{
            "bind": "Duplicati-Source",
            "container": "/source"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Optionally specify any [CLI variables](https://duplicati.readthedocs.io/en/latest/07-other-command-line-utilities/) you want to launch the app with",
            "label": "CLI_ARGS",
            "name": "CLI_ARGS"
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "Drupal",
        "description": "Open-source content management framework",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
        "platform": "linux",
        "type": 1,
        "name": "Drupal",
        "image": "drupal:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Drupal",
            "container": "/var/www/html"
        }],
        "categories": [
            "CMS"
        ]
    },{
        "title": "ElasticSearch",
        "description": "Open-source search and analytics engine",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
        "platform": "linux",
        "type": 1,
        "name": "ElasticSearch",
        "image": "elasticsearch:7.15.1",
        "restart_policy": "unless-stopped",
        "ports": [
            "9200:9200/tcp",
            "9300:9300/tcp"
        ],
        "volumes": [{
            "bind": "ElasticSearch",
            "container": "/usr/share/elasticsearch/data"
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Emby",
        "description": "[Emby](https://emby.media/) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Emby",
        "image": "linuxserver/emby:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8096:8096/tcp",
            "8920:8920/tcp"
        ],
        "volumes": [{
            "bind": "Emby-Config",
            "container": "/config"
        },{
            "bind": "Emby-TVShows",
            "container": "/data/tvshows"
        },{
            "bind": "Emby-Movies",
            "container": "/data/movies"
        },{
            "bind": "/opt/vc/lib",
            "container": "/opt/vc/lib"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Home Media"
        ]
    },{
        "title": "EmbyStat",
        "description": "[Embystat](https://github.com/mregni/EmbyStat) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "EmbyStat",
        "image": "linuxserver/embystat:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "6555:6555/tcp"
        ],
        "volumes": [{
                "bind": "EmbyStat",
                "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Home Media"
        ]
    },{
        "title": "EmulatorJS",
        "description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "EmulatorJS",
        "image": "linuxserver/emulatorjs:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3013:3000/tcp",
            "92:80/tcp",
            "4001:4001/tcp"
        ],
        "volumes": [{
            "bind": "EmulatorJS",
            "container": "/data"
        }],
        "env": [{
            "default": "/",
            "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'",
            "label": "SUBFOLDER",
            "name": "SUBFOLDER"
        }],
        "categories": [
            "Emulator"
        ]
    },{
        "title": "EndleSSH",
        "description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "EndleSSH",
        "image": "linuxserver/endlessh:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "22:2222/tcp"
        ],
        "volumes": [{
            "bind": "EndleSSH",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "10000",
            "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines.",
            "label": "MSDELAY",
            "name": "MSDELAY"
        },{
            "default": "32",
            "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes.",
            "label": "MAXLINES",
            "name": "MAXLINES"
        },{
            "default": "4096",
            "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue.",
            "label": "MAXCLIENTS",
            "name": "MAXCLIENTS"
        },{
            "default": "false",
            "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped).",
            "label": "LOGFILE",
            "name": "LOGFILE"
        },{
            "default": "",
            "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both.",
            "label": "BINDFAMILY",
            "name": "BINDFAMILY"
        }],
        "categories": [
            "Security"
        ]
    },{
        "title": "Fail2Ban",
        "description": "[Fail2ban](http://www.fail2ban.org/) is a daemon to ban hosts that cause multiple authentication errors.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Fail2Ban",
        "image": "linuxserver/fail2ban:latest",
        "network": "host",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Fail2Ban-Config",
            "container": "/config"
        },{
            "bind": "Fail2Ban-Log:ro",
            "container": "/var/log:ro"
        },{
            "bind": "Fail2Ban-Airsonic:ro",
            "container": "/remotelogs/airsonic:ro"
        },{
            "bind": "Fail2Ban-Apache2:ro",
            "container": "/remotelogs/apache2:ro"
        },{
            "bind": "Fail2Ban-Authelia:ro",
            "container": "/remotelogs/authelia:ro"
        },{
            "bind": "Fail2Ban-Emby:ro",
            "container": "/remotelogs/emby:ro"
        },{
            "bind": "Fail2Ban-FileBrowser:ro",
            "container": "/remotelogs/filebrowser:ro"
        },{
            "bind": "Fail2Ban-HomeAssistant:ro",
            "container": "/remotelogs/homeassistant:ro"
        },{
            "bind": "Fail2Ban-Lighttpd:ro",
            "container": "/remotelogs/lighttpd:ro"
        },{
            "bind": "Fail2Ban-NextCloud:ro",
            "container": "/remotelogs/nextcloud:ro"
        },{
            "bind": "Fail2Ban-nginx:ro",
            "container": "/remotelogs/nginx:ro"
        },{
            "bind": "Fail2Ban-nzbget:ro",
            "container": "/remotelogs/nzbget:ro"
        },{
            "bind": "Fail2Ban-OverSeerr:ro",
            "container": "/remotelogs/overseerr:ro"
        },{
            "bind": "Fail2Ban-Prowlarr:ro",
            "container": "/remotelogs/prowlarr:ro"
        },{
            "bind": "Fail2Ban-Radarr:ro",
            "container": "/remotelogs/radarr:ro"
        },{
            "bind": "Fail2Ban-Sabnzbd:ro",
            "container": "/remotelogs/sabnzbd:ro"
        },{
            "bind": "Fail2Ban-Sonarr:ro",
            "container": "/remotelogs/sonarr:ro"
        },{
            "bind": "Fail2Ban-Unificontroller:ro",
            "container": "/remotelogs/unificontroller:ro"
        },{
            "bind": "Fail2Ban-Vaultwarden:ro",
            "container": "/remotelogs/vaultwarden:ro"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "-vv",
            "description": "Set the container log verbosity. Valid options are -v, -vv, -vvv, -vvvv, or leaving the value blank or not setting the variable.",
            "label": "VERBOSITY",
            "name": "VERBOSITY"
        }],
        "categories": [
            "Authentication"
        ]
    },{
        "title": "FDO",
        "description": "FDO",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
        "platform": "linux",
        "type": 3,
        "name": "FDO",
        "restart_policy": "unless-stopped",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/fdo/docker-stack.yml"
        },
        "env": [{
            "default": "admin",
            "name": "owner_api_user",
            "label": "API Username"
        },{
            "default": "admin",
            "name": "owner_api_password",
            "label": "API Password"
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "Feed2toot",
        "description": "[Feed2toot](https://gitlab.com/chaica/feed2toot) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/feed2toot/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Feed2toot",
        "image": "linuxserver/feed2toot:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "/volume1/docker/feed2toot/config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "5",
            "description": "Limit number of RSS entries published at each execution.",
            "label": "FEED_LIMIT",
            "name": "FEED_LIMIT"
        }],
        "categories": [
            "RSS"
        ]
    },{
        "title": "Fenrus",
        "description": "Fenrus is a Node application and requires NodeJS to run. Once NodeJS is installed you can run Fenrus",
        "logo": "https://user-images.githubusercontent.com/958400/154829266-62206846-c6ef-4718-9910-2b83eb6aa41c.png",
        "platform": "linux",
        "type": 3,
        "name": "Fenrus",
        "repository": {
            "stackfile": "Template/Stack/fenrus.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "preset":true
        },{
            "default": "22",
            "name": "PORT",
            "label": "PORT"
        }],
        "categories": [
            "Dashboard Server"
        ]
    },{
        "title": "FFMPEG",
        "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ffmpeg/config</p>",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "FFMPEG",
        "image": "linuxserver/ffmpeg:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "FFMPEG",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "File Browser",
        "description": "A web file manager",
        "note": "Default credentials: admin/admin",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
        "platform": "linux",
        "type": 1,
        "name": "File-Browser",
        "image": "filebrowser/filebrowser:latest",
        "restart_policy": "unless-stopped",
        "command": "--port 80 --database /data/database.db --root /srv",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "File-Browser-Data",
            "container": "/data"
        },{
            "bind": "File-Browser-Srv",
            "container": "/srv"
        }],
        "categories": [
            "Filesystem", 
            "Storage"
        ]
    },{
        "title": "FileBrowser",
        "description": "Web File Browser which can be used as a middleware or standalone app.",
        "note": "The default user and password is admin/admin.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/filebrowser.png",
        "platform": "linux",
        "type": 1,
        "name": "filebrowser",
        "image": "80x86/filebrowser:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8082:8082/tcp"
        ],
        "volumes": [{
            "bind": "FileBrowser-Config",
            "container": "/config"
        },{
            "bind": "FileBrowser-Files",
            "container": "/myfiles"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "FileZilla",
        "description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "FileZilla",
        "image": "linuxserver/filezilla:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "FileZilla",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "Fleet",
        "description": "[Fleet](https://github.com/linuxserver/fleet) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Fleet",
        "image": "linuxserver/fleet:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Fleet",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "DATABASE",
            "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES.",
            "label": "fleet_admin_authentication_type",
            "name": "fleet_admin_authentication_type"
        },{
            "default": "jdbc:mariadb://<url>:3306/fleet",
            "description": "The full JDBC connection string to the Fleet database",
            "label": "fleet_database_url",
            "name": "fleet_database_url"
        },{
            "default": "admin",
            "description": "The username with the relevant GRANT permissions for the database",
            "label": "fleet_database_username",
            "name": "fleet_database_username"
        },{
            "default": "admin",
            "description": "The database user's password.",
            "label": "fleet_database_password",
            "name": "fleet_database_password"
        },{
            "default": "randomstring",
            "description": "A string used as part of the password key derivation process.",
            "label": "fleet_admin_secret",
            "name": "fleet_admin_secret"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "FoldingAtHome",
        "description": "[Folding@home](https://foldingathome.org/) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
        "logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "FoldingAtHome",
        "image": "linuxserver/foldingathome:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "7396:7396/tcp",
            "36330:36330/tcp"
        ],
        "volumes": [{
            "bind": "FoldingAtHome",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Research"
        ]
    },{
        "title": "FreshRSS",
        "description": "[Freshrss](https://freshrss.org/) is a free, self-hostable aggregator for rss feeds.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "FreshRSS",
        "image": "linuxserver/freshrss:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "FreshRSS",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "RSS"
        ]
    },{
        "title": "Frigate NVR",
        "description": "A complete and local NVR designed for Home Assistant with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.",
        "logo": "https://raw.githubusercontent.com/blakeblackshear/frigate/master/docs/static/img/frigate.png",
        "platform": "linux",
        "type": 3,
        "name": "frigatenvr",
        "repository": {
            "stackfile": "Template/Stack/frigatenvr.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "categories": [
            "Smart Home"
        ]
    },{
        "title": "Gazee",
        "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/gazee-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Gazee",
        "image": "linuxserver/gazee:latest",
        "ports": [
            "4242:4242/tcp"
        ],
        "volumes": [{
                "bind": "Gazee-Config",
                "container": "/config"
            },{
                "bind": "Gazee-Comics",
                "container": "/comics"
            },{
                "bind": "Gazee-MyLar",
                "container": "/mylar"
            }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "category": [
            "Web",
            "Books",
            "Tools"
        ]
    },{
        "title": "Github-Desktop",
        "description": "[Github Desktop](https://desktop.github.com/) is an open source Electron-based GitHub app. It is written in TypeScript and uses React.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/github-desktop/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/github-desktop-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Github-Desktop",
        "image": "linuxserver/github-desktop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "Github-Desktop",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Git"
        ]
    },{
        "title": "Gitlab CE",
        "description": "Open-source end-to-end software development platform",
        "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
        "platform": "linux",
        "type": 1,
        "name": "Gitlab",
        "image": "gitlab/gitlab-ce:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "93:80/tcp",
            "444:443/tcp",
            "22:22/tcp"
        ],
        "volumes": [{
            "bind": "Gitlab-ETC",
            "container": "/etc/gitlab"
        },{
            "bind": "Gitlab-Log",
            "container": "/var/log/gitlab"
        },{
            "bind": "Gitlab-OPT",
            "container": "/var/opt/gitlab"
        }],
        "categories": [
            "Development",
            "Project-Management",
            "Git"
        ]
    },{
        "title": "GitQlient",
        "description": "[GitQlient](https://github.com/francescmm/GitQlient) is a multi-platform Git client originally forked from QGit. Nowadays it goes beyond of just a fork and adds a lot of new functionality.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/gitqlient/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gitqlient-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "GitQlient",
        "image": "linuxserver/gitqlient:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "GitQlient",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Git"
        ]
    },{
        "title": "Ghost",
        "description": "Free and open-source blogging platform",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
        "note": "Access the blog management interface under <code>/ghost/</code>.",
        "platform": "linux",
        "type": 1,
        "name": "Gitlab",
        "image": "ghost:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "2368:2368/tcp"
        ],
        "volumes": [{
            "bind": "Ghost",
            "container": "/var/lib/ghost/content"
        }],
        "categories": [
            "Blog"
        ]
    },{
        "title": "Grav",
        "description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Grav",
        "image": "linuxserver/grav:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Grav",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Webserver"
        ]
    },{
        "title": "Grocy",
        "description": "[Grocy](https://github.com/grocy/grocy) is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool For more information on grocy visit their website and check it out: https://grocy.info",
        "logo": "https://grocy.info/img/grocy_logo.svg",
        "platform": "linux",
        "type": 1,
        "name": "Grocy",
        "image": "linuxserver/grocy:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "9283:80/tcp"
        ],
        "volumes": [{
            "bind": "Grocy",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "Guacd",
        "description": "[Guacd](https://guacamole.apache.org/) - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png",
        "platform": "linux",
        "type": 1,
        "name": "Guacd",
        "image": "linuxserver/guacd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4822:4822/tcp"
        ]
    },{
        "title": "Habridge",
        "description": "[Habridge](http://bwssystems.com/#/habridge) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)",
        "logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
        "platform": "linux",
        "type": 1,
        "name": "Habridge",
        "image": "linuxserver/habridge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp",
            "50000:50000/tcp"
        ],
        "volumes": [{
            "bind": "Habridge",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "<Your Key To Encrypt Security Data>",
            "description": "Key used to secure communication.",
            "label": "SEC_KEY",
            "name": "SEC_KEY"
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Automation"
        ]
    },{
        "title": "Headphones",
        "description": "[Headphones](https://github.com/rembo10/headphones) is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Headphones",
        "image": "linuxserver/headphones:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8181:8181/tcp"
        ],
        "volumes": [{
            "bind": "Headphones-Config",
            "container": "/config"
        },{
            "bind": "Headphones-Downloads",
            "container": "/downloads"
        },{
            "bind": "Headphones-Music",
            "container": "/music"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Music"
        ]
    },{
        "title": "Healthchecks",
        "description": "[Healthchecks](https://github.com/healthchecks/healthchecks) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
        "logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
        "platform": "linux",
        "type": 1,
        "name": "Healthchecks",
        "image": "linuxserver/healthchecks:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "HealthChecks",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "<SITE_ROOT>",
            "description": "The site's top-level URL and the port it listens to if different than 80 or 443 (e.g., https://healthchecks.example.com:8000)",
            "label": "SITE_ROOT",
            "name": "SITE_ROOT"
        },{
            "default": "<SITE_NAME>",
            "description": "The site's name (e.g., 'Example Corp HealthChecks')",
            "label": "SITE_NAME",
            "name": "SITE_NAME"
        },{
            "default": "<DEFAULT_FROM_EMAIL>",
            "description": "From email for alerts",
            "label": "DEFAULT_FROM_EMAIL",
            "name": "DEFAULT_FROM_EMAIL"
        },{
            "default": "<EMAIL_HOST>",
            "description": "SMTP host",
            "label": "EMAIL_HOST",
            "name": "EMAIL_HOST"
        },{
            "default": "<EMAIL_PORT>",
            "description": "SMTP port",
            "label": "EMAIL_PORT",
            "name": "EMAIL_PORT"
        },{
            "default": "<EMAIL_HOST_USER>",
            "description": "SMTP user",
            "label": "EMAIL_HOST_USER",
            "name": "EMAIL_HOST_USER"
        },{
            "default": "<EMAIL_HOST_PASSWORD>",
            "description": "SMTP password",
            "label": "EMAIL_HOST_PASSWORD",
            "name": "EMAIL_HOST_PASSWORD"
        },{
            "default": "<True or False>",
            "description": "Use TLS for SMTP (`True` or `False`)",
            "label": "EMAIL_USE_TLS",
            "name": "EMAIL_USE_TLS"
        },{
            "default": "<ALLOWED_HOSTS>",
            "description": "array of valid hostnames for the server `['test.com','test2.com']` (default: `['*']`)",
            "label": "ALLOWED_HOSTS",
            "name": "ALLOWED_HOSTS"
        },{
            "default": "<SUPERUSER_EMAIL>",
            "description": "Superuser email",
            "label": "SUPERUSER_EMAIL",
            "name": "SUPERUSER_EMAIL"
        },{
            "default": "<SUPERUSER_PASSWORD>",
            "description": "Superuser password",
            "label": "SUPERUSER_PASSWORD",
            "name": "SUPERUSER_PASSWORD"
        },{
            "default": "True/False",
            "description": "Defaults to False. Set to true to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file.",
            "label": "REGENERATE_SETTINGS",
            "name": "REGENERATE_SETTINGS"
        },{
            "default": "<SITE_LOGO_URL>",
            "description": "Custom site logo URL",
            "label": "SITE_LOGO_URL",
            "name": "SITE_LOGO_URL"
        },{
            "default": "<SECRET_KEY>",
            "description": "A secret key used for cryptographic signing. docker-healthchecks will generate a secure value if one does not exist",
            "label": "SECRET_KEY",
            "name": "SECRET_KEY"
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "HedgeDoc",
        "description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "HedgeDoc",
        "image": "linuxserver/hedgedoc:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "HedgeDoc",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "<hostname or ip>",
            "description": "Host address of MySQL database",
            "label": "DB_HOST",
            "name": "DB_HOST"
        },{
            "default": "3306",
            "description": "Port to access MySQL database (default is 3306)",
            "label": "DB_PORT",
            "name": "DB_PORT"
        },{
            "default": "hedgedoc",
            "description": "Database user",
            "label": "DB_USER",
            "name": "DB_USER"
        },{
            "default": "<secret password>",
            "description": "Database password",
            "label": "DB_PASS",
            "name": "DB_PASS"
        },{
            "default": "hedgedoc",
            "description": "Database name",
            "label": "DB_NAME",
            "name": "DB_NAME"
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "localhost",
            "description": "The address the GUI will be accessed at (e.g., `192.168.1.1` or `hedgedoc.domain.com`)",
            "label": "CMD_DOMAIN",
            "name": "CMD_DOMAIN"
        },{
            "default": "true",
            "description": "Set to `false` if accessing at port `80` or `443`",
            "label": "CMD_URL_ADDPORT",
            "name": "CMD_URL_ADDPORT"
        },{
            "default": "false",
            "description": "Set to `true` if accessing over HTTPS via reverse proxy",
            "label": "CMD_PROTOCOL_USESSL",
            "name": "CMD_PROTOCOL_USESSL"
        }],
        "categories": [
            "Documentation"
        ]
    },{
        "title": "Heimdall",
        "description": "[Heimdall](https://heimdall.site) is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Heimdall",
        "image": "linuxserver/heimdall:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "443:443/tcp"
        ],
        "volumes": [{
            "bind": "Heimdall",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }]
    },{
        "title": "Hishtory-Server",
        "description": "[hiSHtory](https://github.com/ddworken/hishtory) is a better shell history. It stores your shell history in context (what directory you ran the command in, whether it succeeded or failed, how long it took, etc). This is all stored locally and end-to-end encrypted for syncing to to all your other computers.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hishtory-server-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Hishtory-Server",
        "image": "linuxserver/hishtory-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "postgresql://${HISHTORY_DB_USER}:${HISHTORY_DB_PASS}@hishtory-db:5432/hishtory?sslmode=disable",
            "description": "Postgres DB [Connection URI](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING). Special characters must be [URL encoded](https://en.wikipedia.org/wiki/URL_encoding).",
            "label": "HISHTORY_POSTGRES_DB",
            "name": "HISHTORY_POSTGRES_DB"
        }],
        "categories": [
            "Shell"
        ]
    },{
        "title": "HomeAssistant",
        "description": "[Homeassistant](https://www.home-assistant.io/) is open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
        "logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
        "platform": "linux",
        "type": 1,
        "name": "HomeAssistant",
        "image": "linuxserver/homeassistant:latest",
        "network": "host",
        "restart_policy": "unless-stopped",
        "ports": [
            "8123:8123/tcp"
        ],
        "volumes": [{
            "bind": "HomeAssistant",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Automation"
        ]
    },{
        "title": "Homer",
        "description": "A dead simple static HOMepage for your servER to keep your services on hand, from a simple yaml configuration file.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/homer.png",
        "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
        "platform": "linux",
        "type": 1,
        "name": "Homer",
        "image": "b4bz/homer:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8902:8080/tcp"
        ],
        "volumes": [{
            "bind": "Homer-Assets",
            "container": "/www/assets"
        },{
            "bind": "Homer",
            "container": "/www/config.yml"
        }],
        "categories": [
            "Webserver"
        ]
    },{
        "title": "HTPC Manager",
        "description": "HTPC Manager, a front end for many HTPC related applications. Hellowlol version.",
        "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/htpcmanager-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "HTPCManager",
        "image": "linuxserver/htpcmanager:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8085:8085/tcp"
        ],
        "volumes": [{
            "bind": "HTPCManager",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "100",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Movies",
            "Music"
        ]
    },{
        "title": "Httpd",
        "description": "Open-source HTTP server",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
        "platform": "linux",
        "type": 1,
        "name": "Httpd",
        "image": "httpd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "87:80/tcp"
        ],
        "volumes": [{
            "bind": "Httpd",
            "container": "/usr/local/apache2/htdocs/"
        }],
        "categories": [
            "Webserver"
        ]
    },{
        "title": "Huginn",
        "description": "Create agents that monitor and act on your behalf.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/huginn.png",
        "platform": "linux",
        "type": 1,
        "name": "huginn",
        "image": "huginn/huginn:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "Huginn",
            "container": "/var/lib/mysql"
        }],
        "categories": [
            "Monitor"
        ]
    },{
        "title": "Invoice Ninja",
        "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/invoice_ninja.png",
        "platform": "linux",
        "type": 3,
        "name": "invoice_ninja",
        "repository": {
            "stackfile": "Template/Stack/invoice-ninja.yml",
            "url": "https://github.com/Qballjos/portainer_templates"
        },
        "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>.",
        "env": [{
            "default": "invoice.my.domain",
            "label": "URL",
            "name": "URL"
        },{
            "default": "",
            "label": "APP_KEY",
            "name": "APP_KEY"
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "admin",
            "label": "DATABASE_PASSWORD",
            "name": "DATABASE_PASSWORD"
        },{
            "default": "admin",
            "label": "MYSQL_ROOT_PASSWORD",
            "name": "MYSQL_ROOT_PASSWORD"
        },{
            "default": "80",
            "label": "PORT",
            "name": "PORT"
        }],
        "categories": [
            "Finance"
        ]
    },{
        "title": "IPFS",
        "description": "[Ipfs](https://ipfs.io/) - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png",
        "platform": "linux",
        "type": 1,
        "name": "IPFS",
        "image": "linuxserver/ipfs:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "4001:4001/tcp",
            "5001:5001/tcp",
            "8080:8080/tcp",
            "443:443/tcp"
        ],
        "volumes": [{
            "bind": "IPFS",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "P2P"
        ]
    },{
        "title": "IT Tools",
        "description": "IT Tools",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "IT-Tools",
        "image": "corentinth/it-tools:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8082:80/tcp"
        ],
        "categories": [
            "Management"
        ]
    },{
        "title": "IronFunctions",
        "description": "Open-source serverless computing platform",
        "note": "Deploys the IronFunctions API and UI.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
        "platform": "linux",
        "type": 2,
        "name": "IronFunctions",
        "restart_policy": "unless-stopped",
        "repository": {
            "stackfile": "stacks/ironfunctions/docker-stack.yml",
            "url": "https://github.com/mikestraney/portainer-templates"
        },
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "IronFunctions",
            "container": "/app/data"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "IronFunctions API",
        "description": "Open-source serverless computing platform",
        "note": "",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
        "platform": "linux",
        "type": 1,
        "name": "IronFunctions-API",
        "image": "iron/functions:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "IronFunctions-API",
            "container": "/app/data"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "IronFunctions UI",
        "description": "Open-source user interface for IronFunctions",
        "note": "",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
        "platform": "linux",
        "type": 1,
        "name": "IronFunctions-UI",
        "image": "iron/functions-ui:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4000:4000/tcp"
        ],
        "volumes": [{
            "bind": "IronFunctions-UI",
            "container": "/app/data"
        }],
        "env": [{
            "default": "",
            "description": "",
            "label": "API URL",
            "name": "API_URL"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "Jackett",
        "description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Jackett",
        "image": "linuxserver/jackett:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "9117:9117/tcp"
        ],
        "volumes": [{
            "bind": "Jackett-Config",
            "container": "/config"
        },{
            "bind": "Jackett-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "true",
            "description": "Allow Jackett to update inside of the container (currently recommended by Jackett and enabled by default)",
            "label": "AUTO_UPDATE",
            "name": "AUTO_UPDATE"
        },{
            "default": "<run options here>",
            "description": "Optionally specify additional arguments to be passed.",
            "label": "RUN_OPTS",
            "name": "RUN_OPTS"
        }],
        "categories": [
            "Proxy"
        ]
    },{
        "title": "Jellyfin",
        "description": "[Jellyfin](https://jellyfin.github.io/) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
        "logo": "https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true",
        "platform": "linux",
        "type": 1,
        "name": "Jellyfin",
        "image": "linuxserver/jellyfin:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8096:8096/tcp",
            "8920:8920/tcp",
            "7359:7359/udp",
            "1900:1900/udp"
        ],
        "volumes": [{
                "bind": "Jellyfin-Config",
                "container": "/config"
            },{
                "bind": "Jellyfin-TVShows",
                "container": "/data/tvshows"
            },{
                "bind": "Jellyfin-Movies",
                "container": "/data/movies"
            }],
        "env": [{
                "default": "1000",
                "description": "for GroupID",
                "label": "PUID",
                "name": "PUID",
            "preset":true
            },{
                "default": "1000",
                "description": "for UserID",
                "label": "PGID",
                "name": "PGID",
            "preset":true
            },{
                "default": "America/New_York",
                "description": "Specify a timezone to use (e.g., America/New_York)",
                "label": "TZ",
                "name": "TZ",
            "preset":true
            },{
                "default": "192.168.0.5",
                "description": "Set the autodiscovery response domain or IP address.",
                "label": "JELLYFIN_PublishedServerUrl",
                "name": "JELLYFIN_PublishedServerUrl"
            }]
    },{
        "title": "Jenkins",
        "description": "Open-source continuous integration tool",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
        "platform": "linux",
        "type": 1,
        "name": "Jenkins",
        "image": "jenkins/jenkins:lts-jdk11",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp", 
            "5000:50000/tcp"
        ],
        "volumes": [{
            "bind": "Jenkins",
            "container": "/var/jenkins_home"
        }],
        "categories": [
            "Continuous-Integration"
        ]
    },{
        "title": "Jenkins-Builder",
        "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
        "platform": "linux",
        "type": 1,
        "name": "Jenkins-Builder",
        "image": "linuxserver/jenkins-builder:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Jenkins-Builder",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "Joomla",
        "description": "Another free and open-source CMS",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
        "platform": "linux",
        "type": 1,
        "name": "IT-Tools",
        "image": "joomla:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Joomla",
            "container": "/var/www/html"
        }],
        "env": [{
            "default": "admin",
            "name": "JOOMLA_DB_HOST",
            "label": "MySQL database host",
            "type": "container"
        },{
            "default": "admin",
            "name": "JOOMLA_DB_PASSWORD",
            "label": "Database password"
        }],
        "categories": [
            "CMS"
        ]
    },{
        "title": "Kanzi",
        "description": "[Kanzi](https://lexigr.am/), formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
        "platform": "linux",
        "type": 1,
        "name": "Kanzi",
        "image": "linuxserver/kanzi:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "Kanzi",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "kanzi",
            "description": "Specify an invocation name for this skill, use either kanzi or kod.",
            "label": "INVOCATION_NAME",
            "name": "INVOCATION_NAME"
        },{
            "default": "https://server.com/kanzi/",
            "description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included.",
            "label": "URL_ENDPOINT",
            "name": "URL_ENDPOINT"
        }],
        "categories": [
            "Kodi"
        ]
    },{
        "title": "Kasm",
        "description": "[Kasm](https://www.kasmweb.com/?utm_campaign=LinuxServer&utm_source=listing) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).",
        "logo": "https://kasm-ci.s3.amazonaws.com/kasm_wide.png",
        "platform": "linux",
        "type": 1,
        "name": "Kasm",
        "image": "linuxserver/kasm:latest",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "ports": [
            "3000:3000/tcp",
            "443:443/tcp"
        ],
        "volumes": [{
                "bind": "Kasm-OPT",
                "container": "/opt"
            },{
                "bind": "Kasm-Profiles",
                "container": "/profiles"
            },{
                "bind": "/dev/input",
                "container": "/dev/input"
            },{
                "bind": "/run/udev/data",
                "container": "/run/udev/data"
            }],
        "env": [{
                "default": "443",
                "description": "Specify the port you bind to the outside for Kasm Workspaces.",
                "label": "KASM_PORT",
                "name": "KASM_PORT"
            },{
                "default": "admin",
                "description": "Optionally specify a DockerHub Username to pull private images.",
                "label": "DOCKER_HUB_USERNAME",
                "name": "DOCKER_HUB_USERNAME"
            },{
                "default": "admin",
                "description": "Optionally specify a DockerHub password to pull private images.",
                "label": "DOCKER_HUB_PASSWORD",
                "name": "DOCKER_HUB_PASSWORD"
            }],
            "category": [
                "Kasm"
            ]
    },{
        "title": "KDenLive",
        "description": "[Kdenlive](https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "KDenLive",
        "image": "linuxserver/kdenlive:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "KDenLive",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "/",
            "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
            "label": "SUBFOLDER",
            "name": "SUBFOLDER"
        }],
        "category": [
            "Movies"
        ]
    },{
        "title": "Kodi-Headless",
        "description": "Headless installation of Kodiï¿½ (formerly known as XBMCï¿½), to enable library updates.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/kodi-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Kodi-Headless",
        "image": "linuxserver/kodi-headless:latest",
        "ports": [
            "8080:8080/tcp",
            "9777:9777/udp"
        ],
        "volumes": [{
            "bind": "Kodi-Headless",
            "container": "/config/.kodi"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "Movies"
        ]
    },{
        "title": "LazyLibrarian",
        "description": "[Lazylibrarian](https://lazylibrarian.gitlab.io/) is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "LazyLibrarian",
        "image": "linuxserver/lazylibrarian:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5299:5299/tcp"
        ],
        "volumes": [{
            "bind": "LazyLibrarian-Config",
            "container": "/config"
        },{
            "bind": "LazyLibrarian-Downloads",
            "container": "/downloads"
        },{
            "bind": "LazyLibrarian-Books",
            "container": "/books"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg",
            "description": "Allows additional functionality to be added, e.g. the Calibredb import program (optional, more info below)",
            "label": "DOCKER_MODS",
            "name": "DOCKER_MODS"
        }],
        "categories": [
            "Books"
        ]
    },{
        "title": "LetsEncrypt",
        "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/letsencrypt.png",
        "platform": "linux",
        "type": 1,
        "name": "LetsEncrypt",
        "image": "linuxserver/letsencrypt:latest",
        "ports": [
            "80/tcp",
            "443/tcp"
        ],
        "volumes": [{
            "bind": "LetsEncrypt",
            "container": "/config"
        }],
        "env": [{
            "default": "-Xms256m -Xmx512m",
            "label": "EMAIL",
            "name": "EMAIL"
            
        },{
            "default": "-Xms256m -Xmx512m",
            "label": "URL",
            "name": "URL"
        },{
            "default": "www,",
            "label": "SUBDOMAINS",
            "name": "SUBDOMAINS"
            
        },{
            "default": "false",
            "label": "ONLY_SUBDOMAINS",
            "name": "ONLY_SUBDOMAINS"
        },{
            "default": "2048",
            "label": "DHLEVEL",
            "name": "DHLEVEL"
        },{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "http",
            "label": "VALIDATION",
            "name": "VALIDATION"
        },{
            "default": "http",
            "label": "DNSPLUGIN",
            "name": "DNSPLUGIN"
            
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "Tools",
            "Web"
        ]
    },{
        "title": "Ldap-auth",
        "description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
        "logo": "https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg",
        "platform": "linux",
        "type": 1,
        "name": "Ldap-auth",
        "image": "linuxserver/ldap-auth:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8888:8888/tcp",
            "9000:9000/tcp"
        ],
        "env": [{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)",
            "label": "FERNETKEY",
            "name": "FERNETKEY"
        },{
            "default": "",
            "description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon",
            "label": "CERTFILE",
            "name": "CERTFILE"
        },{
            "default": "",
            "description": "Point this to the private key file, matching the certificate file referred to in CERTFILE",
            "label": "KEYFILE",
            "name": "KEYFILE"
        }],
        "categories": [
            "Authentication"
        ]
    },{
        "title": "LibreOffice",
        "description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "LibreOffice",
        "image": "linuxserver/libreoffice:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "LibreOffice",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Productivity"
        ]
    },{
        "title": "LibreSonic",
        "description": "Libresonic is a free, web-based media streamer, providing ubiquitous access to your music. Use it to share your music with friends or listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room. /music = Location of music. /media = Location of other media. /podcasts = Location of podcasts. /playlists = Location for playlist storage. CONTEXT_PATH is for setting url-base in reverse proxy setups - (optional) Default user/pass is admin/admin",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/libresonic.png",
        "platform": "linux",
        "type": 1,
        "name": "LibreSonic",
        "image": "linuxserver/libresonic:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "4040/tcp"
        ],
        "volumes": [{
            "bind": "LibreSonic-Music",
            "container": "/music"
        },{
            "bind": "LibreSonic-Playlists",
            "container": "/playlists"
        },{
            "bind": "LibreSonic-Podcasts",
            "container": "/podcasts"
        },{
            "bind": "LibreSonic-Media",
            "container": "/media"
        },{
            "bind": "LibreSonic-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "",
            "description": "Set the CONTEXT_PATH for url-base in reverse proxy setups",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
        },{
            "default": "1000",
            "description": "Specify the PUID (GroupID)",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "Specify the PGID (UserID)",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify the timezone",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Music"
        ]
      },{
        "title": "LibreSpeed",
        "description": "[Librespeed](https://github.com/librespeed/speedtest) is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
        "logo": "https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png",
        "platform": "linux",
        "type": 1,
        "name": "LibreSpeed",
        "image": "linuxserver/librespeed:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "LibreSpeed",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "PASSWORD",
            "description": "Set the password for the results database.",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "false",
            "description": "(optional) set to `true` to enable custom results page in `/config/www/results/index.php`.",
            "label": "CUSTOM_RESULTS",
            "name": "CUSTOM_RESULTS"
        },{
            "default": "sqlite",
            "description": "Defaults to `sqlite`, can also be set to `mysql` or `postgresql`.",
            "label": "DB_TYPE",
            "name": "DB_TYPE"
        },{
            "default": "DB_NAME",
            "description": "Database name. Required for mysql and pgsql.",
            "label": "DB_NAME",
            "name": "DB_NAME"
        },{
            "default": "DB_HOSTNAME",
            "description": "Database address. Required for mysql and pgsql.",
            "label": "DB_HOSTNAME",
            "name": "DB_HOSTNAME"
        },{
            "default": "DB_USERNAME",
            "description": "Database username. Required for mysql and pgsql.",
            "label": "DB_USERNAME",
            "name": "DB_USERNAME"
        },{
            "default": "DB_PASSWORD",
            "description": "Database password. Required for mysql and pgsql.",
            "label": "DB_PASSWORD",
            "name": "DB_PASSWORD"
        },{
            "default": "DB_PORT",
            "description": "Database port. Required for mysql.",
            "label": "DB_PORT",
            "name": "DB_PORT"
        }],
        "categories": [
            "Office"
        ]
    },{
        "title": "Lidarr",
        "description": "[Lidarr](https://github.com/lidarr/Lidarr) is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
        "logo": "https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png",
        "platform": "linux",
        "type": 1,
        "name": "Lidarr",
        "image": "linuxserver/lidarr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8686:8686/tcp"
        ],
        "volumes": [{
            "bind": "Lidarr-Config",
            "container": "/config"
        },{
            "bind": "Lidarr-Music",
            "container": "/music"
        },{
            "bind": "Lidarr-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Torrent"
        ]
    },{
        "title": "Limnoria",
        "description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Limnoria",
        "image": "linuxserver/limnoria:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Limnoria",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Bot"
        ]
    },{
        "title": "LiveSwitch",
        "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
        "platform": "linux",
        "type": 3,
        "name": "LiveSwitch",
        "restart_policy": "unless-stopped",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/liveswitch/docker-compose.yml"
        },
        "env": [{
            "default": "admin",
            "name": "POSTGRES_PASSWORD",
            "label": "Postgres password"
        }],
        "categories": [
            "Media"
        ]
      },{
        "title": "Lollypop",
        "description": "[Lollypop](https://wiki.gnome.org/Apps/Lollypop) is a lightweight modern music player designed to work excellently on the GNOME desktop environment.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lollypop/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lollypop-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Lollypop",
        "image": "linuxserver/lollypop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "Lollypop",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Music"
        ]
    },{
        "title": "Lychee",
        "description": "[Lychee](https://lycheeorg.github.io/) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.' ### UPGRADE WARNING Please note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Lychee",
        "image": "linuxserver/lychee:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Lychee-Config",
            "container": "/config"
        },{
            "bind": "Lychee-Pictures",
            "container": "/pictures"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "mariadb",
            "description": "for specifying the database host",
            "label": "DB_HOST",
            "name": "DB_HOST"
        },{
            "default": "lychee",
            "description": "for specifying the database user",
            "label": "DB_USERNAME",
            "name": "DB_USERNAME"
        },{
            "default": "dbpassword",
            "description": "for specifying the database password",
            "label": "DB_PASSWORD",
            "name": "DB_PASSWORD"
        },{
            "default": "lychee",
            "description": "for specifying the database to be used",
            "label": "DB_DATABASE",
            "name": "DB_DATABASE"
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Magento 2",
        "description": "Open-source e-commerce platform",
        "note": "",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
        "platform": "linux",
        "type": 1,
        "name": "Magento-2",
        "image": "alankent/gsd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "Magento-2",
            "container": "/var/www/html/"
        }],
        "categories": [
            "CMS"
        ]
    },{
        "title": "MariaDB",
        "description": "Performance beyond MySQL",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
        "platform": "linux",
        "type": 1,
        "name": "MariaDB",
        "image": "mariadb:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3306:3306/tcp"
        ],
        "volumes": [{
            "bind": "MariaDB",
            "container": "/var/lib/mysql"
        }],
        "env": [{
            "default": "admin",
            "name": "MYSQL_ROOT_PASSWORD",
            "label": "Root password"
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Mastodon",
        "description": "[Mastodon](https://github.com/mastodon/mastodon/) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Mastodon",
        "image": "linuxserver/mastodon:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "443:443/tcp"
        ],
        "volumes": [{
            "bind": "Mastodon",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        },{
            "default": "example.com",
            "name": "LOCAL_DOMAIN",
            "label": "LOCAL_DOMAIN",
            "description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
        },{
            "default": "redis",
            "name": "REDIS_HOST",
            "label": "REDIS_HOST",
            "description": "Redis server hostname"
        },{
            "default": "6379",
            "name": "REDIS_PORT",
            "label": "REDIS_PORT",
            "description": "Redis port"
        },{
            "default": "db",
            "name": "DB_HOST",
            "label": "DB_HOST",
            "description": "Postgres database hostname"
        },{
            "default": "mastodon",
            "name": "DB_USER",
            "label": "DB_USER",
            "description": "Postgres username"
        },{
            "default": "mastodon",
            "name": "DB_NAME",
            "label": "DB_NAME",
            "description": "Postgres db name"
        },{
            "default": "mastodon",
            "name": "DB_PASS",
            "label": "DB_PASS",
            "description": "Postgres password"
        },{
            "default": "5432",
            "name": "DB_PORT",
            "label": "DB_PORT",
            "description": "Portgres port"
        },{
            "default": "false",
            "name": "ES_ENABLED",
            "label": "ES_ENABLED",
            "description": "Enable or disable Elasticsearch (requires a separate ES instance)"
        },{
            "default": "",
            "name": "SECRET_KEY_BASE",
            "label": "SECRET_KEY_BASE",
            "description": "Browser session secret. Changing it will break all active browser sessions."
        },{
            "default": "",
            "name": "OTP_SECRET",
            "label": "OTP_SECRET",
            "description": "MFA secret. Changing it will break two-factor authentication."
        },{
            "default": "",
            "name": "VAPID_PRIVATE_KEY",
            "label": "VAPID_PRIVATE_KEY",
            "description": "Push notification private key. Changing it will break push notifications."
        },{
            "default": "",
            "name": "VAPID_PUBLIC_KEY",
            "label": "VAPID_PUBLIC_KEY",
            "description": "Push notification public key. Changing it will break push notifications."
        },{
            "default": "mail.example.com",
            "name": "SMTP_SERVER",
            "label": "SMTP_SERVER",
            "description": "SMTP server for email notifications"
        },{
            "default": "25",
            "name": "SMTP_PORT",
            "label": "SMTP_PORT",
            "description": "SMTP server port"
        },{
            "default": "",
            "name": "SMTP_LOGIN",
            "label": "SMTP_LOGIN",
            "description": "SMTP username"
        },{
            "default": "",
            "name": "SMTP_PASSWORD",
            "label": "SMTP_PASSWORD",
            "description": "SMTP password"
        },{
            "default": "notifications@example.com",
            "name": "SMTP_FROM_ADDRESS",
            "label": "SMTP_FROM_ADDRESS",
            "description": "From address for emails send from Mastodon"
        },{
            "default": "false",
            "name": "S3_ENABLED",
            "label": "S3_ENABLED",
            "description": "Enable or disable S3 storage of uploaded files"
        },{
            "default": "mastodon.example.com",
            "name": "WEB_DOMAIN",
            "label": "WEB_DOMAIN",
            "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic)"
        },{
            "default": "es",
            "name": "ES_HOST",
            "label": "ES_HOST",
            "description": "Elasticsearch server hostname"
        },{
            "default": "9200",
            "name": "ES_PORT",
            "label": "ES_PORT",
            "description": "Elasticsearch port"
        },{
            "default": "elastic",
            "name": "ES_USER",
            "label": "ES_USER",
            "description": "Elasticsearch username"
        },{
            "default": "elastic",
            "name": "ES_PASS",
            "label": "ES_PASS",
            "description": "Elasticsearch password"
        },{
            "default": "",
            "name": "S3_BUCKET",
            "label": "S3_BUCKET",
            "description": "S3 bucket hostname"
        },{
            "default": "",
            "name": "AWS_ACCESS_KEY_ID",
            "label": "AWS_ACCESS_KEY_ID",
            "description": "S3 bucket access key ID"
        },{
            "default": "",
            "name": "AWS_SECRET_ACCESS_KEY",
            "label": "AWS_SECRET_ACCESS_KEY",
            "description": "S3 bucket secret access key"
        },{
            "default": "",
            "name": "S3_ALIAS_HOST",
            "label": "S3_ALIAS_HOST",
            "description": "Alternate hostname for object fetching if you are front the S3 connections."
        },{
            "default": "false",
            "name": "SIDEKIQ_ONLY",
            "label": "SIDEKIQ_ONLY",
            "description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling."
        },{
            "default": "",
            "name": "SIDEKIQ_QUEUE",
            "label": "SIDEKIQ_QUEUE",
            "description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues)."
        },{
            "default": "false",
            "name": "SIDEKIQ_DEFAULT",
            "label": "SIDEKIQ_DEFAULT",
            "description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue."
        },{
            "default": "5",
            "name": "SIDEKIQ_THREADS",
            "label": "SIDEKIQ_THREADS",
            "description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
        },{
            "default": "5",
            "name": "DB_POOL",
            "label": "DB_POOL",
            "description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "Mautic",
        "description": "Open-source marketing automation platform",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
        "platform": "linux",
        "type": 1,
        "name": "Mautic",
        "image": "mautic/mautic:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Mautic",
            "container": "/var/www/html"
        }],
        "env": [{
            "default": "127.0.0.1",
            "name": "MAUTIC_DB_HOST",
            "label": "MySQL database host",
            "type": "container"
        },{
            "default": "admin",
            "name": "MAUTIC_DB_PASSWORD",
            "label": "Database password"
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "McMyAdmin 2",
        "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mcmyadmin-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "McMyAdmin2",
        "image": "linuxserver/mcmyadmin2:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp",
            "25565:25565/tcp"
        ],
        "volumes": [{
            "bind": "McMyAdmin2",
            "container": "/minecraft"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Minecraft"
        ]
    },{
        "title": "Medusa",
        "description": "[Medusa](https://pymedusa.com/) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Medusa",
        "image": "linuxserver/medusa:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8081:8081/tcp"
        ],
        "volumes": [{
            "bind": "Medusa-Config",
            "container": "/config"
        },{
            "bind": "Medusa-Downloads",
            "container": "/downloads"
        },{
            "bind": "Medusa-TV",
            "container": "/tv"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "Microsoft-OMSAgent",
        "description": "Microsoft Operations Management Suite Linux agent.",
        "note": "This template deploys the Microsoft OMS Agent.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "platform": "linux",
        "type": 2,
        "name": "Microsoft-OMSAgent",
        "image": "microsoft/oms",
        "restart_policy": "unless-stopped",
        "ports": [
          "25224:25224/udp",
          "25225:25225/tcp"
        ],
        "volumes": [{
            "bind": "Microsoft-OMSAgent-State",
            "container": "/var/opt/microsoft/omsagent/state"
        },{
            "bind": "Microsoft-OMSAgent",
            "container": "/etc/opt/microsoft/omsagent"
        }],
        "env": [{
            "default": "",
            "description": "Azure Workspace ID",
            "label": "Workspace ID",
            "name": "AZURE_WORKSPACE_ID"
        },{
            "default": "",
            "description": "Azure primary key",
            "label": "Primary key",
            "name": "AZURE_PRIMARY_KEY"
        }],
        "categories": [
            "OPS"
        ]
    },{
        "title": "Minetest",
        "description": "[Minetest](http://www.minetest.net/) (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Minetest",
        "image": "linuxserver/minetest:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "30000:30000/udp"
        ],
        "volumes": [{
            "bind": "Minetest",
            "container": "/config/.minetest"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "'--gameid minetest'",
            "description": "Optionally specify any [CLI variables](https://wiki.minetest.net/Command_line) you want to launch the app with",
            "label": "CLI_ARGS",
            "name": "CLI_ARGS"
        }],
        "categories": [
            "Minecraft"
        ]
    },{
        "title": "Minisatip",
        "description": "[Minisatip](https://github.com/catalinii/minisatip) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Minisatip",
        "image": "linuxserver/minisatip:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8875:8875/tcp",
            "554:554/tcp",
            "1900:1900/udp"
        ],
        "volumes": [{
            "bind": "MiniSatip",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use (e.g., America/New_York)",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "<parameter>",
            "description": "Specify specific run params for minisatip",
            "label": "RUN_OPTS",
            "name": "RUN_OPTS"
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "Minio",
        "description": "A distributed object storage server built for cloud applications and devops",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
        "platform": "linux",
        "type": 1,
        "name": "Minio",
        "image": "quay.io/minio/minio:latest",
        "restart_policy": "unless-stopped",
        "command": "server /data --console-address ':9001'",
        "ports": [
            "9000:9000/tcp", 
            "9001:9001/tcp"
        ],
        "volumes": [{
            "bind": "Minio-Data",
            "container": "/data"
        },{
            "bind": "Minio",
            "container": "/root/.minio"
        }],
        "env": [{
            "default": "admin",
            "name": "MINIO_ROOT_USER",
            "label": "Root user"
        },{
            "default": "admin",
            "name": "MINIO_ROOT_PASSWORD",
            "label": "Root password"
        }],
        "categories": [
            "Storage"
        ]
    },{
        "title": "Mongo",
        "description": "Open-source document-oriented database",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
        "platform": "linux",
        "type": 1,
        "name": "Mongo",
        "image": "mongo:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "27017:27017/tcp"
        ],
        "volumes": [{
            "bind": "Mongo",
            "container": "/data/db"
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "MStream",
        "description": "[Mstream](https://mstream.io/) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "MStream",
        "image": "linuxserver/mstream:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3014:3000/tcp"
        ],
        "volumes": [{
            "bind": "MStream-Config",
            "container": "/config"
        },{
            "bind": "MStream-Music",
            "container": "/music"
        }],
        "categories": [
            "Music"
        ]
    },{
        "title": "Mullvad-Browser",
        "description": "The [Mullvad Browser](https://mullvad.net/en/browser) is a privacy-focused web browser developed in a collaboration between Mullvad VPN and the Tor Project. It’s designed to minimize tracking and fingerprinting. You could say it’s a Tor Browser to use without the Tor Network. Instead, you can use it with a trustworthy VPN.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mullvad-browser/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mullvad-browser-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Mullvad-Browser",
        "image": "linuxserver/mullvad-browser:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "Mullvad-Browser",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "192.168.0.0/16",
            "description": "If using a VPN, set this to your local LAN IP range using CIDR notation. Without it you will be unable to access the web interface. If you have multiple ranges or a complex LAN setup you will need to manage this yourself in the wg0.conf, see the App Setup section for details.",
            "label": "LOCAL_NET",
            "name": "LOCAL_NET"
        }],
        "categories": [
            "Browser"
        ]
    },{
        "title": "Murmur",
        "description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/Mumble-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Murmur",
        "image": "goofball222/murmur:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "64738:64738/tcp",
            "64738:64738/udp"
        ],
        "volumes": [{
            "bind": "/etc/localtime:ro",
            "container": "/etc/localtime"
        },{
            "bind": "Murmur-Config",
            "container": "/opt/murmur/config"
        },{
            "bind": "Murmur-Data",
            "container": "/opt/murmur/data"
        },{
            "bind": "Murmur-Log",
            "container": "/opt/murmur/log"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "100",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Voice",
            "Chat"
        ]
    },{
        "title": "MusicBrainz",
        "description": "MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/musicbrainz-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "MusicBrainz",
        "image": "linuxserver/musicbrainz:latest",
        "ports": [
            "5000:5000/tcp"
        ],
        "volumes": [{
            "bind": "MusicBrainz-Config",
            "container": "/config"
        },{
            "bind": "MusicBrainz-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "",
            "label": "BRAINZCODE",
            "name": "BRAINZCODE"
        },{
            "default": "",
            "label": "WEBADDRESS",
            "name": "WEBADDRESS"
        },{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "100",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
            }
        ],
        "category": [
            "Music"
        ]
    },{
        "title": "Muximux",
        "description": "[Muximux](https://github.com/mescon/Muximux) is a lightweight portal to view & manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Muximux",
        "image": "linuxserver/muximux:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "96:80/tcp"
        ],
        "volumes": [{
            "bind": "Muximux",
            "container": "/config"
        }],
        "categories": [
            "Bookmarks"
        ]
    },{
        "title": "Mylar3",
        "description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "MyLar3",
        "image": "linuxserver/mylar3:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8090:8090/tcp"
        ],
        "volumes": [{
            "bind": "MyLar3-Config",
            "container": "/config"
        },{
            "bind": "MyLar3-Comics",
            "container": "/comics"
        },{
            "bind": "MyLar3-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Books"
        ]
    },{
        "title": "MySQL",
        "description": "The most popular open-source database",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
        "platform": "linux",
        "type": 1,
        "name": "MySQL",
        "image": "mysql/mysql-server:5.7",
        "restart_policy": "unless-stopped",
        "ports": [
            "3306:3306/tcp"
        ],
        "volumes": [{
            "bind": "MySQL",
            "container": "/var/lib/mysql"
        }],
        "env": [{
            "default": "admin",
            "name": "MYSQL_ROOT_PASSWORD",
            "label": "Root password"
        },{
            "default": "%",
            "name": "MYSQL_ROOT_HOST",
            "preset": true
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "MySQL-Workbench",
        "description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "MySQL-Workbench",
        "image": "linuxserver/mysql-workbench:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "MySQL-Workbench",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Nano",
        "description": "[Nano](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nano/config</p>",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Nano",
        "image": "linuxserver/nano:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8075:8075",
            "7076:3000",
            "7077:3001"
        ],
        "volumes": [
            {
                "bind": "Nano",
                "container": "/config"
            }
        ],
        "env": [
            {
                "default": "1000",
                "description": "for UserID",
                "label": "PUID",
                "name": "PUID",
            "preset":true
            },
            {
                "default": "1000",
                "description": "for GroupID",
                "label": "PGID",
                "name": "PGID",
            "preset":true
            },
            {
                "default": "America/New_York",
                "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
                "label": "TZ",
                "name": "TZ",
            "preset":true
            },
            {
                "default": "localhost",
                "description": "Default peer host (can be overridden with an array by command line options)",
                "label": "PEER_HOST",
                "name": "PEER_HOST"
            },
            {
                "default": "GENESIS_PUBLIC",
                "description": "Genesis block public key",
                "label": "LIVE_GENESIS_PUB",
                "name": "LIVE_GENESIS_PUB"
            },
            {
                "default": "nano_xxxxxx",
                "description": "Genesis block account",
                "label": "LIVE_GENESIS_ACCOUNT",
                "name": "LIVE_GENESIS_ACCOUNT"
            },
            {
                "default": "WORK_FOR_BLOCK",
                "description": "Genesis block proof of work",
                "label": "LIVE_GENESIS_WORK",
                "name": "LIVE_GENESIS_WORK"
            },
            {
                "default": "BLOCK_SIGNATURE",
                "description": "Genesis block signature",
                "label": "LIVE_GENESIS_SIG",
                "name": "LIVE_GENESIS_SIG"
            },
            {
                "default": "--config node.enable_voting=true",
                "description": "Node run command cli args",
                "label": "CLI_OPTIONS",
                "name": "CLI_OPTIONS"
            },
            {
                "default": "http://example.com/Nano_64_version_20.7z",
                "description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node",
                "label": "LMDB_BOOTSTRAP_URL",
                "name": "LMDB_BOOTSTRAP_URL"
            }
        ],
        "categories": [
            "Finance"
        ]
    },{
        "title": "Nano-Wallet",
        "description": "[Nano-wallet](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions. This container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Nano-Wallet",
        "image": "linuxserver/nano-wallet:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "categories": [
            "Finance"
        ]
    },{
        "title": "NetBootXYZ",
        "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
        "logo": "https://netboot.xyz/images/netboot.xyz.gif",
        "platform": "linux",
        "type": 1,
        "name": "NetBootXYZ",
        "image": "linuxserver/netbootxyz:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "69:69/udp",
            "8080:80/tcp"
        ],
        "volumes": [{
            "bind": "NetBootXYZ-Config",
            "container": "/config"
        },{
            "bind": "NetBootXYZ-Assets",
            "container": "/assets"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "1.9.9",
            "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)",
            "label": "MENU_VERSION",
            "name": "MENU_VERSION"
        },{
            "default": "30000:30010",
            "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)",
            "label": "PORT_RANGE",
            "name": "PORT_RANGE"
        },{
            "default": "/",
            "description": "Specify a subfolder if running this behind a reverse proxy (e.g., /proxy/)",
            "label": "SUBFOLDER",
            "name": "SUBFOLDER"
        }],
        "categories": [
            "Linux"
        ]
    },{
        "title": "NetBox",
        "description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
        "logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
        "platform": "linux",
        "type": 1,
        "name": "NetBox",
        "image": "linuxserver/netbox:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "NetBox",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "<SUPERUSER_EMAIL>",
            "description": "Email address for `admin` account",
            "label": "SUPERUSER_EMAIL",
            "name": "SUPERUSER_EMAIL"
        },{
            "default": "<SUPERUSER_PASSWORD>",
            "description": "Password for `admin` account",
            "label": "SUPERUSER_PASSWORD",
            "name": "SUPERUSER_PASSWORD"
        },{
            "default": "<ALLOWED_HOST>",
            "description": "The hostname you will use to access the app (i.e., netbox.example.com)",
            "label": "ALLOWED_HOST",
            "name": "ALLOWED_HOST"
        },{
            "default": "<DB_NAME>",
            "description": "Database name (default: netbox)",
            "label": "DB_NAME",
            "name": "DB_NAME"
        },{
            "default": "<DB_USER>",
            "description": "Database user",
            "label": "DB_USER",
            "name": "DB_USER"
        },{
            "default": "<DB_PASSWORD>",
            "description": "Database password",
            "label": "DB_PASSWORD",
            "name": "DB_PASSWORD"
        },{
            "default": "<DB_HOST>",
            "description": "Database host (default: postgres)",
            "label": "DB_HOST",
            "name": "DB_HOST"
        },{
            "default": "<DB_PORT>",
            "description": "Database port (default: 5432)",
            "label": "DB_PORT",
            "name": "DB_PORT"
        },{
            "default": "<REDIS_HOST>",
            "description": "Redis host (default: redis)",
            "label": "REDIS_HOST",
            "name": "REDIS_HOST"
        },{
            "default": "<REDIS_PORT>",
            "description": "Redis port number (default: 6379)",
            "label": "REDIS_PORT",
            "name": "REDIS_PORT"
        },{
            "default": "<REDIS_PASSWORD>",
            "description": "Redis password (default: none)",
            "label": "REDIS_PASSWORD",
            "name": "REDIS_PASSWORD"
        },{
            "default": "<REDIS_DB_TASK>",
            "description": "Redis database ID for tasks (default: 0)",
            "label": "REDIS_DB_TASK",
            "name": "REDIS_DB_TASK"
        },{
            "default": "<REDIS_DB_CACHE>",
            "description": "Redis database ID for caching (default: 1)",
            "label": "REDIS_DB_CACHE",
            "name": "REDIS_DB_CACHE"
        },{
            "default": "<BASE_PATH>",
            "description": "The path you will use to access the app (i.e., /netbox, optional, default: none)",
            "label": "BASE_PATH",
            "name": "BASE_PATH"
        },{
            "default": "<REMOTE_AUTH_ENABLED>",
            "description": "Enable remote authentication (optional, default: False)",
            "label": "REMOTE_AUTH_ENABLED",
            "name": "REMOTE_AUTH_ENABLED"
        },{
            "default": "<REMOTE_AUTH_BACKEND>",
            "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)",
            "label": "REMOTE_AUTH_BACKEND",
            "name": "REMOTE_AUTH_BACKEND"
        },{
            "default": "<REMOTE_AUTH_HEADER>",
            "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)",
            "label": "REMOTE_AUTH_HEADER",
            "name": "REMOTE_AUTH_HEADER"
        },{
            "default": "<REMOTE_AUTH_AUTO_CREATE_USER>",
            "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)",
            "label": "REMOTE_AUTH_AUTO_CREATE_USER",
            "name": "REMOTE_AUTH_AUTO_CREATE_USER"
        },{
            "default": "<REMOTE_AUTH_DEFAULT_GROUPS>",
            "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])",
            "label": "REMOTE_AUTH_DEFAULT_GROUPS",
            "name": "REMOTE_AUTH_DEFAULT_GROUPS"
        },{
            "default": "<REMOTE_AUTH_DEFAULT_PERMISSIONS>",
            "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})",
            "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
            "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS"
        }],
        "categories": [
            "Monitor"
        ]
    },{
        "title": "NextCloud",
        "description": "[Nextcloud](https://nextcloud.com/) gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "NextCloud",
        "image": "linuxserver/nextcloud:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8443:443/tcp"
        ],
        "volumes": [{
            "bind": "NextCloud/Config",
            "container": "/config"
        },{
            "bind": "NextCloud/Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Filesystem", 
            "Storage"
        ]
    },{
        "title": "NGINX",
        "description": "[Nginx Proxy Manager] enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
        "platform": "linux",
        "type": 1,
        "name": "NGINX",
        "image": "jc21/nginx-proxy-manager",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "81:81/tcp",
            "443:443/tcp"
        ],
        "volumes": [{
            "bind": "NGINX/Data",
            "container": "/data"
        },{
            "bind": "NGINX/LetsEncrypt",
            "container": "/etc/letsencrypt"
        }],
        "categories": [
            "Proxy"
        ]
    },{
        "title": "Ngircd",
        "description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Ngircd",
        "image": "linuxserver/ngircd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "6667:6667/tcp"
        ],
        "volumes": [{
            "bind": "Ngircd",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "IRC"
        ]
    },{
        "title": "Nntp2nntp",
        "description": "[Nntp2nntp](https://github.com/linuxserver/nntp2nntp) proxy allows you to use your NNTP Account from multiple systems, each with its own username and password. It fully supports SSL, and you can also limit access to the proxy with SSL certificates. Nntp2nntp proxy is simple and fast.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
        "platform": "linux",
        "type": 1,
        "name": "Nntp2nntp",
        "image": "linuxserver/nntp2nntp:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "1563:1563"
        ],
        "volumes": [{
            "bind": "Nntp2nntp",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Proxy"
        ]
    },{
        "title": "NodeJS",
        "description": "JavaScript-based platform for server-side and networking applications",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
        "platform": "linux",
        "type": 1,
        "name": "NodeJS",
        "image": "node:latest",
        "restart_policy": "unless-stopped",
        "interactive": true,
        "command": "/bin/bash",
        "categories": [
            "Development"
        ]
    },{
        "title": "NZBGet",
        "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nzbget-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "nzbget",
        "image": "linuxserver/nzbget:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "6789:6789/tcp"
        ],
        "volumes": [{
            "bind": "Nzbget-Config",
            "container": "/config"
        },{
            "bind": "Nzbget-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Downloaders"
        ]
    },{
        "title": "NZBHydra 2",
        "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/hydra-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "NZBHydra2",
        "image": "linuxserver/nzbhydra2:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "5076:5076/tcp"
        ],
        "volumes": [{
            "bind": "NZBHydra2-Config",
            "container": "/config"
        },{
            "bind": "NZBHydra2-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Downloaders"
        ]
    },{
        "title": "Ombi",
        "description": "Ombi allows you to host your own Plex Request and user management system.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ombi.png",
        "platform": "linux",
        "type": 1,
        "name": "ombi",
        "image": "linuxserver/ombi:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "3579:3579/tcp"
        ],
        "volumes": [{
            "bind": "Ombi",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Plex",
            "Movies"
        ]
    },{
        "title": "OPC Router",
        "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
        "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
        "platform": "linux",
        "type": 1,
        "name": "OPC-Router",
        "image": "opcrouter/runtime:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "27017:27017/tcp"
        ],
        "volumes": [{
            "bind": "OPCRouter-DB",
            "container": "/data/db"
        },{
            "bind": "OPCRouter-Crypto",
            "container": "/root/.dotnet/corefx/cryptography/x509stores/"
        }],
        "env": [{
            "default": "admin",
            "name": "OR_DATABASE_USERNAME",
            "label": "Remote management user"
        },{
            "default": "admin",
            "name": "MONGO_INITDB_ROOT_USERNAME",
            "label": "Remote management password"
        },{
            "default": "admin",
            "name": "OR_DATABASE_PASSWORD",
            "label": "Database root user"
        },{
            "default": "admin",
            "name": "MONGO_INITDB_ROOT_PASSWORD",
            "label": "Database root password"
        },{
            "name": "OR_I_ACCEPT_EULA",
            "label": "Accept EULA",
            "select": [{
                "text": "Yes, I accept",
                "value": "true",
                "default": true
            }]
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "OpenAMT",
        "description": "OpenAMT Cloud Toolkit",
        "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
        "platform": "linux",
        "type": 3,
        "name": "OpenAMT",
        "restart_policy": "unless-stopped",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/openamt/docker-compose.yml"
        },
        "env": [{
            "default": "admin",
            "name": "POSTGRES_USER",
            "label": "Database user"
        },{
            "default": "admin",
            "name": "POSTGRES_PASSWORD",
            "label": "Database password"
        },{
            "default": "admin",
            "name": "MPS_USER",
            "label": "MPS user"
        },{
            "default": "admin",
            "name": "MPS_PASSWORD",
            "label": "MPS password"
        },{
            "default": "admin",
            "name": "MPS_COMMON_NAME",
            "label": "MPS URL",
            "description": "Used to connect to the MPS API."
        },{
            "default": "admin",
            "name": "MPS_SECRET",
            "label": "MPS Secret",
            "description": "Strong secret key used to log into MPS."
        },{
            "default": "admin",
            "name": "VAULT_SECRET",
            "label": "Vault secret",
            "description": "Secret token used to log into Vault (don't include '.' character)."
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "OpenFaaS",
        "description": "Serverless functions made simple",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
        "platform": "linux",
        "type": 2,
        "name": "OpenFaaS",
        "repository": {
            "stackfile": "docker-compose.yml",
            "url": "https://github.com/openfaas/faas"
        },
        "categories": [
            "serverless"
        ]
    },{
        "title": "Openssh-server",
        "description": "[Openssh-server](https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
        "logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Openssh-server",
        "image": "linuxserver/openssh-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "2222:2222/tcp"
        ],
        "volumes": [{
            "bind": "OpenSSH-Server",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "yourpublickey",
            "description": "Optional ssh public key, which will automatically be added to authorized_keys.",
            "label": "PUBLIC_KEY",
            "name": "PUBLIC_KEY"
        },{
            "default": "/path/to/file",
            "description": "Optionally specify a file containing the public key (works with docker secrets).",
            "label": "PUBLIC_KEY_FILE",
            "name": "PUBLIC_KEY_FILE"
        },{
            "default": "/path/to/directory/containing/_only_/pubkeys",
            "description": "Optionally specify a directory containing the public keys (works with docker secrets).",
            "label": "PUBLIC_KEY_DIR",
            "name": "PUBLIC_KEY_DIR"
        },{
            "default": "https://github.com/username.keys",
            "description": "Optionally specify a URL containing the public key.",
            "label": "PUBLIC_KEY_URL",
            "name": "PUBLIC_KEY_URL"
        },{
            "default": "false",
            "description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access.",
            "label": "SUDO_ACCESS",
            "name": "SUDO_ACCESS"
        },{
            "default": "false",
            "description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well.",
            "label": "PASSWORD_ACCESS",
            "name": "PASSWORD_ACCESS"
        },{
            "default": "password",
            "description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access.",
            "label": "USER_PASSWORD",
            "name": "USER_PASSWORD"
        },{
            "default": "/path/to/file",
            "description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets).",
            "label": "USER_PASSWORD_FILE",
            "name": "USER_PASSWORD_FILE"
        },{
            "default": "linuxserver.io",
            "description": "Optionally specify a user name (Default:`linuxserver.io`)",
            "label": "USER_NAME",
            "name": "USER_NAME"
        }],
        "categories": [
            "SSH"
        ]
    },{
        "title": "OpenVSCode-Server",
        "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "VSCode",
        "image": "linuxserver/openvscode-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "8443:8443/tcp"
        ],
        "volumes": [{
                "bind": "VSCode",
                "container": "/config"
        }],
        "env": [{
            "default": "admin",
            "description": "To Access the site",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "admin",
            "description": "For Sudo Commands",
            "label": "SUDO_PASSWORD",
            "name": "SUDO_PASSWORD"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "/config/workspace",
            "description": "DEFAULT_WORKSPACE",
            "label": "DEFAULT_WORKSPACE",
            "name": "DEFAULT_WORKSPACE"
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "OpenVPN-AS",
        "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/openvpn-as-icon.png",    
        "platform": "linux",
        "type": 1,
        "name": "OpenVPN",
        "image": "linuxserver/openvpn-as:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "943:943/tcp",
            "9444:9443/tcp",
            "1194:1194/udp"
        ],
        "volumes": [{
            "bind": "OpenVPN",
            "container": "/config"
        }],
        "env": [{
            "default": "eth0",
            "description": "INTERFACE",
            "label": "INTERFACE",
            "name": "INTERFACE"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "VPN"
        ]
    },{
        "title": "Opera",
        "description": "Opera",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Opera",
        "image": "linuxserver/opera:latest",
        "restart_policy": "unless-stopped",
        "security_opt": [
            "seccomp=unconfined"
        ],
        "ports": [
            "3004:3000/tcp"
        ],
        "env": [{
            "default": "admin",
            "description": "Username",
            "label": "CUSTOM_USER",
            "name": "CUSTOM_USER"
        },{
            "default": "admin",
            "description": "To Access the site",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "host_config": {
            "shm_size": 1073741824
        },
        "categories": [
            "Browser"
        ]
    },{
        "title": "Organizr",
        "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/organizr-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "organizr",
        "image": "organizrtools/organizr:latest",
        "ports": [
            "80/tcp"
        ],
        "volumes": [{
            "bind": "Organizr",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "Management"
        ]
    },{
        "title": "Organizr V2",
        "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
        "note": "",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "organizr-V2",
        "image": "organizrtools/organizr-v2:php-fpm",
        "restart_policy": "unless-stopped",
        "ports": [
          "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Organizr-V2",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
          "Management"
        ]
    },{
        "title": "OScam",
        "description": "OScam is a softcam, software to be used to decrypt digital television channels on a set-top box (receiver), as an alternative for a conditional access module (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
        "note": "",
        "logo": "http://i.imgur.com/8LadrLg.png",
        "platform": "linux",
        "type": 1,
        "name": "OScam",
        "image": "linuxserver/oscam:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8888:8888/tcp",
          "10000:10000/tcp"
        ],
        "volumes": [{
            "bind": "OScam",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "Owncloud",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/9d36b4ed7cabc35dbd3849272ba2bd7abe482172/owncloud/logo.png",
        "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily—all under your control. ownCloud’s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
        "platform": "linux",
        "type": 3,
        "name": "Owncloud",
        "repository": {
            "stackfile": "Template/Stack/owncloud.yml",
            "url": "https://github.com/Qballjos/portainer_templates"
        },
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "www.example.com",
            "label": "OWNCLOUD_DOMAIN",
            "name": "OWNCLOUD_DOMAIN"
        },{
            "default": "admin",
            "label": "DB_PASSWORD",
            "name": "DB_PASSWORD"
        },{
            "default": "admin",
            "label": "ADMIN_USERNAME",
            "name": "ADMIN_USERNAME"
        },{
            "default": "admin",
            "label": "ADMIN_PASSWORD",
            "name": "ADMIN_PASSWORD"
        },{
            "default": "5800",
            "label": "PORT",
            "name": "PORT"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "Overseerr",
        "description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
        "platform": "linux",
        "type": 1,
        "name": "Overseerr",
        "image": "linuxserver/overseerr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5055:5055"
        ],
        "volumes": [{
            "bind": "Overseerr",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Media"
        ]
    },{
        "title": "Pairdrop",
        "description": "[PairDrop](https://github.com/schlagmichdoch/PairDrop) is a sublime alternative to AirDrop that works on all platforms. Send images, documents or text via peer to peer connection to devices in the same local network/Wi-Fi or to paired devices.",
        "logo": "https://raw.githubusercontent.com/schlagmichdoch/PairDrop/master/public/images/android-chrome-512x512.png",
        "platform": "linux",
        "type": 1,
        "name": "Pairdrop",
        "image": "linuxserver/pairdrop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000"
        ],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        },{
            "default": "false",
            "name": "RATE_LIMIT",
            "label": "RATE_LIMIT",
            "description": "Set to `true` to limit clients to 100 requests per 5 min"
        },{
            "default": "false",
            "name": "WS_FALLBACK",
            "label": "WS_FALLBACK",
            "description": "Set to `true` to enable websocket fallback if the peer to peer WebRTC connection is not available to the client (see App Setup notes)."
        },{
            "default": "",
            "name": "RTC_CONFIG",
            "label": "RTC_CONFIG",
            "description": "Path to a json file containing custom STUN/TURN config (see App Setup notes)"
        },{
            "default": "false",
            "name": "DEBUG_MODE",
            "label": "DEBUG_MODE",
            "description": "Set to `true` to debug the http server configuration by logging clients IP addresses used by PairDrop to STDOUT. [See here for more info](https://github.com/schlagmichdoch/PairDrop/blob/master/docs/host-your-own.md#debug-mode). Do not use in production!"
        }],
        "categories": [
            "Air Drop"
        ]
    },{
        "title": "Paperless-NG",
        "description": "[Paperless-ng](https://github.com/jonaswinkler/paperless-ng) is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Paperless-NG",
        "image": "linuxserver/paperless-ng:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "Paperless-NG-Config",
            "container": "/config"
        },{
            "bind": "Paperless-NG-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py",
            "label": "REDIS_URL",
            "name": "REDIS_URL"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "PaperMerge",
        "description": "[Papermerge](https://www.papermerge.com/) is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "PaperMerge",
        "image": "linuxserver/papermerge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
                "bind": "PaperMerge-Config",
                "container": "/config"
            },{
                "bind": "PaperMerge-Data",
                "container": "/data"
            }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "",
            "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py",
            "label": "REDIS_URL",
            "name": "REDIS_URL"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Petio",
        "description": "Petio is a third-party companion app available to Plex server owners to allow their users to request, review, and discover content.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/petio-icon.png",
        "platform": "linux",
        "type": 3,
        "name": "petio",
        "repository": {
            "url": "https://github.com/Qballjos/portainer_templates",
            "stackfile": "Template/Stack/petio.yml"
        },
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "5800",
            "label": "PORT",
            "name": "PORT"
        }],
        "categories": [
            "Plex"
        ]
    },{
        "title": "PhotoShow",
        "description": "[Photoshow](https://github.com/thibaud-rohmer/PhotoShow) is gallery software at its easiest, it doesn't even require a database.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/photoshow-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "PhotoShow",
        "image": "linuxserver/photoshow:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
                "bind": "PhotoShow-Config",
                "container": "/config"
            },{
                "bind": "PhotoShow-Pictures",
                "container": "/Pictures:ro"
            },{
                "bind": "PhotoShow-Thumbs",
                "container": "/Thumbs"
            }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Pi.Alert",
        "description": "WIFI / LAN intruder detector",
        "logo": "https://raw.githubusercontent.com/pucherot/Pi.Alert/main/docs/img/1_devices.jpg",
        "platform": "linux",
        "type": 1,
        "name": "PI-Alert",
        "image": "jokobsk/pi.alert",
        "restart_policy": "always",
        "ports": [
            "20211:20211/udp"
        ],
        "volumes": [{
            "bind": "PI-Alert",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "categories": [
            "Network Server"
        ]
    },{
        "title": "Pi-Hole",
        "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
        "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
        "platform": "linux",
        "type": 1,
        "name": "PiHole",
        "image": "pihole/pihole:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "54:53/tcp",
            "54:53/udp",
            "67:67/udp",
            "97:80/tcp",
            "4443:443/tcp"
        ],
        "volumes": [{
            "bind": "PiHole/config",
            "container": "/etc/pihole"
        },{
            "bind": "PiHole/DNS",
            "container": "/etc/dnsmasq.d"
        }],
        "categories": [
            "AdBlocker"
        ]
    },{
        "title": "Pidgin",
        "description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pidgin/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Pidgin",
        "image": "linuxserver/pidgin:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000",
            "3001:3001"
        ],
        "volumes": [{
            "bind": "Pidgin",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        }],
        "categories": [
            "Chat"
        ]
    },{
        "title": "Piwigo",
        "description": "[Piwigo](http://piwigo.org/) is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Piwigo",
        "image": "linuxserver/piwigo:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Piwigo-Config",
            "container": "/config"
        },{
            "bind": "Piwigo-Gallery",
            "container": "/gallery"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Pixapop",
        "description": "[Pixapop](https://github.com/bierdok/pixapop) is an open-source single page application to view your photos in the easiest way possible.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pixapop.png",
        "platform": "linux",
        "type": 1,
        "name": "Pixapop",
        "image": "linuxserver/pixapop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Pixapop-Config",
            "container": "/config"
        },{
            "bind": "Pixapop-Photos",
            "container": "/photos"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "admin",
            "description": "Specify a username to enable authentication.",
            "label": "APP_USERNAME",
            "name": "APP_USERNAME"
        },{
            "default": "admin",
            "description": "Specify a password to enable authentication.",
            "label": "APP_PASSWORD",
            "name": "APP_PASSWORD"
        }],
        "categories": [
            "Photo"
        ]
    },{
        "title": "Plesk",
        "description": "WebOps platform and hosting control panel",
        "note": "Default credentials: admin / changeme",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
        "platform": "linux",
        "type": 1,
        "name": "plesk",
        "image": "plesk/plesk:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "21:21/tcp",
            "80:80/tcp",
            "443:443/tcp",
            "8880:8880/tcp",
            "8443:8443/tcp",
            "8447:8447/tcp"
        ],
        "categories": [
            "CMS"
        ]
    },{
        "title": "Plex",
        "description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
        "logo": "http://the-gadgeteer.com/wp-content/uploads/2015/10/plex-logo-e1446990678679.png",
        "platform": "linux",
        "type": 1,
        "name": "Plex",
        "image": "linuxserver/plex:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "volumes": [{
            "bind": "Plex-Config",
            "container": "/config"
        },{
            "bind": "Plex-TV",
            "container": "/tv"
        },{
            "bind": "Plex-Movies",
            "container": "/movies"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "docker",
            "description": "Set whether to update plex or not - see Application Setup section.",
            "label": "VERSION",
            "name": "VERSION"
        },{
            "default": "",
            "description": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes.",
            "label": "PLEX_CLAIM",
            "name": "PLEX_CLAIM"
        }],
        "categories": [
            "Plex"
        ]
    },{
        "title": "Plex Requests",
        "description": "Plex Requests is a simple automated way for users to request new content for Plex.",
        "note": "Users can make requests through a web interface, and administrators can manage and fulfill those requests.",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "plexrequests",
        "image": "linuxserver/plexrequests:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "PlexRequests",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "The user ID for file permissions within the container",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "The group ID for file permissions within the container",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "",
            "description": "The base URL for Plex Requests",
            "label": "URL_BASE",
            "name": "URL_BASE"
        }],
        "categories": [
            "Plex"
        ]
    },{
        "title": "Plex-meta-manager",
        "description": "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Plex-meta-manager",
        "image": "linuxserver/plex-meta-manager:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "Plex-Meta-Manager",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "name": "PUID",
            "label": "PUID",
            "description": "for UserID",
            "preset":true
        },{
            "default": "1000",
            "name": "PGID",
            "label": "PGID",
            "description": "for GroupID",
            "preset":true
        },{
            "default": "America/New_York",
            "name": "TZ",
            "label": "TZ",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "preset":true
        },{
            "default": "/config/config.yml",
            "name": "PMM_CONFIG",
            "label": "PMM_CONFIG",
            "description": "Specify a custom config file to use."
        },{
            "default": "03:00",
            "name": "PMM_TIME",
            "label": "PMM_TIME",
            "description": "Comma-separated list of times to update each day. Format: `HH:MM`."
        },{
            "default": "False",
            "name": "PMM_RUN",
            "label": "PMM_RUN",
            "description": "Set to `True` to run without the scheduler."
        },{
            "default": "False",
            "name": "PMM_TEST",
            "label": "PMM_TEST",
            "description": "Set to `True` to run in debug mode with only collections that have `test: true`."
        },{
            "default": "False",
            "name": "PMM_NO_MISSING",
            "label": "PMM_NO_MISSING",
            "description": "Set to `True` to run without any of the missing movie/show functions."
        }],
        "categories": [
            "Plex"
        ]
    },{
        "title": "Plone",
        "description": "A free and open-source CMS built on top of Zope",
        "note": "Default user and password are admin/admin",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
        "platform": "linux",
        "type": 1,
        "name": "Plone",
        "image": "plone:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Plone",
            "container": "/data"
        }],
        "categories": [
            "CMS"
        ]
    },{
        "title": "PostgreSQL",
        "description": "The most advanced open-source database",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
        "platform": "linux",
        "type": 1,
        "name": "PostgreSQL",
        "image": "postgres:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5432:5432/tcp"
        ],
        "volumes": [{
            "bind": "PostgreSQL",
            "container": "/var/lib/postgresql/data"
        }],
        "env": [{
            "default": "admin",
            "name": "POSTGRES_USER",
            "label": "Superuser"
        },{
            "default": "admin",
            "name": "POSTGRES_PASSWORD",
            "label": "Superuser password"
        }],
        "categories": [
            "Database"
        ]
      },{
        "title": "Pritunl",
        "description": "Pritunl container built on Alpine Linux. Supports IPv6 and running behind a reverse proxy. This container requires an external MongoDB and should be run via Docker Compose or other orchestration.",
        "note": "Documentation on this container can be found here: <a href=https://hub.docker.com/r/goofball222/pritunl>https://hub.docker.com/r/goofball222/pritunl</a>",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
        "platform": "linux",
        "type": 3,
        "name": "pritunl",
        "repository": {
            "stackfile": "Template/Stack/pritunl.yml",
            "url": "https://github.com/SelfhostedPro/selfhosted_templates"
        },
        "env": [{
            "default": "false",
            "label": "REVERSE_PROXY",
            "name": "REVERSE_PROXY"
        },{
            "default": "",
            "label": "PRITUNL_OPTS",
            "name": "PRITUNL_OPTS"
        },{
            "default": "mongodb://mongo:27017/pritunl",
            "label": "MONGODB_URI",
            "name": "MONGODB_URI"
            
        },{
            "default": "false",
            "label": "WIREGUARD",
            "name": "WIREGUARD"
        }],
        "categories": [
            "VPN",
            "Proxy"
        ]
    },{
        "title": "ProjectSend",
        "description": "[Projectsend](http://www.projectsend.org) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
        "logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
        "platform": "linux",
        "type": 1,
        "name": "ProjectSend",
        "image": "linuxserver/projectsend:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "ProjectSend-Config",
            "container": "/config"
        },{
            "bind": "ProjectSend-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "<5000>",
            "description": "To set maximum upload size (in MB), default if unset is 5000.",
            "label": "MAX_UPLOAD",
            "name": "MAX_UPLOAD"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "ProtonMail Bridge",
        "description": "ProtonMail Bridge is an unofficial Docker container of the ProtonMail Bridge, which provides IMAP and SMTP access to ProtonMail accounts. It is based on Hendrik Meyer's work.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/protonmail-bridge.png",
        "platform": "linux",
        "type": 1,
        "name": "ProtonMail-Bridge",
        "image": "shenxn/protonmail-bridge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "143.:143/tcp",
            "25:25/tcp"
        ],
        "volumes": [{
            "bind": "ProtonMail-Bridge",
            "container": "/root"
        }],
        "categories": [
            "Email"
        ]
    },{
        "title": "Prowlarr",
        "description": "Prowlarr is an indexer manager/proxy that integrates with your various PVR apps. It supports both Torrent Trackers and Usenet Indexers and seamlessly integrates with Sonarr, Radarr, Lidarr, and Readarr.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/prowlarr.png",
        "platform": "linux",
        "type": 1,
        "name": "prowlarr",
        "image": "ghcr.io/linuxserver/prowlarr:develop",
        "restart_policy": "unless-stopped",
        "ports": [
            "9696:9696/tcp"
        ],
        "volumes": [{
            "bind": "Prowlarr",
            "container": "/config"
        }],
        "env": [{
            "label": "PUID",
            "name": "PUID",
            "default": "1000",
            "preset":true
        },{
            "label": "PGID",
            "name": "PGID",
            "default": "1000",
            "preset":true
        }],
        "categories": [
            "Downloaders",
            "Proxy"
        ]
    },{
        "title": "PWNDrop",
        "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
        "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
        "platform": "linux",
        "type": 1,
        "name": "PWNDrop",
        "image": "linuxserver/pwndrop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "PWNDrop",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "/pwndrop",
            "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui.",
            "label": "SECRET_PATH",
            "name": "SECRET_PATH"
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Pydio",
        "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/pydio-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Pydio",
        "image": "linuxserver/pydio:latest",
        "ports": [
            "443:443/tcp"
        ],
        "volumes": [{
            "bind": "Pydio-Config",
            "container": "/config"
        },{
            "bind": "Pydio-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "Cloud"
        ]
    },{
        "title": "Pydio-cells",
        "description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
        "logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
        "platform": "linux",
        "type": 1,
        "name": "Pydio-cells",
        "image": "linuxserver/pydio-cells:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp",
            "33060:33060/tcp"
        ],
        "volumes": [{
            "bind": "Pydio-Cells",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "yourdomain.url",
            "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT).",
            "label": "EXTERNALURL",
            "name": "EXTERNALURL"
        },{
            "default": "0.0.0.0",
            "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy).",
            "label": "SERVER_IP",
            "name": "SERVER_IP"
        }],
        "categories": [
            "Cloud"
        ]
    },{
        "title": "PyLoad",
        "description": "[Pyload](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pyload-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "PyLoad",
        "image": "linuxserver/pyload:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp",
            "7227:7227/tcp"
        ],
        "volumes": [{
            "bind": "PyLoad-Config",
            "container": "/config"
        },{
            "bind": "PyLoad-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Downloaders"
        ]
    },{
        "title": "Pyload-ng",
        "description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pyload-ng/config<br>mkdir -p /volume1/docker/pyload-ng/downloads</p>",
        "logo": "https://pyload.net/img/banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Pyload-ng",
        "image": "linuxserver/pyload-ng:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp",
            "9666:9666/tcp"
        ],
        "volumes": [{
            "bind": "/volume1/docker/pyload-ng/config",
            "container": "/config"
        },{
            "bind": "/volume1/docker/pyload-ng/downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Downloaders"
        ]
    },{
        "title": "Pylon",
        "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
        "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
        "platform": "linux",
        "type": 1,
        "name": "Pylon",
        "image": "linuxserver/pylon:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3131:3131/tcp"
        ],
        "volumes": [{
            "bind": "Pylon-Config",
            "container": "/config"
        },{
            "bind": "Pylon-Code",
            "container": "/code"
        }],
        "env": [{
            "name": "GITURL",
            "label": "GITURL",
            "default": "https://github.com/linuxserver/docker-pylon.git",
            "description": "Specify a git repo to checkout on first startup"
        },{
            "name": "PYUSER",
            "label": "PYUSER",
            "default": "myuser",
            "description": "Specify a basic auth user."
        },{
            "name": "PYPASS",
            "label": "PYPASS",
            "default": "mypass",
            "description": "Specify a basic auth password."
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "QBitTorrent",
        "description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "QBitTorrent",
        "image": "linuxserver/qbittorrent:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "6881:6881/tcp",
            "6881:6881/udp",
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "QBitTorrent-Config",
            "container": "/config"
        },{
            "bind": "QBitTorrent-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "8080",
            "description": "for changing the port of the webui, see below for explanation",
            "label": "WEBUI_PORT",
            "name": "WEBUI_PORT"
        }],
        "categories": [
            "Torrent"
        ]
    },{
        "title": "QDirStat",
        "description": "[QDirStat](https://github.com/shundhammer/qdirstat) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "QDirStat",
        "image": "linuxserver/qdirstat:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "QDirStat-Config",
            "container": "/config"
        },{
            "bind": "QDirStat-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Quassel-Core",
        "description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
        "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Quassel-Core",
        "image": "linuxserver/quassel-core:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "4242:4242/tcp",
            "113:10113/tcp"
        ],
        "volumes": [{
            "bind": "Quassel-Core",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "--config-from-environment",
            "description": "Custom CLI options for Quassel",
            "label": "RUN_OPTS",
            "name": "RUN_OPTS"
        }],
        "categories": [
            "IRC"
        ]
    },{
        "title": "Quassel-web",
        "description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Quassel-web",
        "image": "linuxserver/quassel-web:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "64443:64443/tcp"
        ],
        "volumes": [{
            "bind": "Quassel-Web",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "192.168.1.10",
            "description": "specify the URL or IP address of your Quassel Core instance",
            "label": "QUASSEL_CORE",
            "name": "QUASSEL_CORE"
        },{
            "default": "4242",
            "description": "specify the port of your Quassel Core instance",
            "label": "QUASSEL_PORT",
            "name": "QUASSEL_PORT"
        },{
            "default": "/quassel",
            "description": "Specify a url-base in reverse proxy setups ie. `/quassel`",
            "label": "URL_BASE",
            "name": "URL_BASE"
        }],
        "categories": [
            "IRC"
        ]
    },{
        "title": "RabbitMQ",
        "description": "Highly reliable enterprise messaging system",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
        "platform": "linux",
        "type": 1,
        "name": "Pylon",
        "image": "rabbitmq:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "5671:5671/tcp", 
            "5672:5672/tcp"
        ],
        "volumes": [{
            "bind": "RabbitMQ",
            "container": "/var/lib/rabbitmq"
        }],
        "categories": [
            "Messaging"
        ]
    },{
        "title": "Radarr",
        "description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies à la Couchpotato.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
        "platform": "linux",
        "type": 1,
        "name": "Radarr",
        "image": "linuxserver/radarr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "7878:7878/tcp"
        ],
        "volumes": [{
            "bind": "Radarr-Config",
            "container": "/config"
            },{
            "bind": "Radarr-Movies",
            "container": "/movies"
            },{
            "bind": "Radarr-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Movies"
        ]
      },{
        "title": "Raneto",
        "description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
        "logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
        "platform": "linux",
        "type": 1,
        "name": "Raneto",
        "image": "linuxserver/raneto:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "Raneto",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Project-Management"
        ]
      },{
        "title": "Reactive-Resume",
        "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source, and free forever.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/reactiveresume.png",
        "platform": "linux",
        "type": 1,
        "name": "ReactiveResume",
        "image": "amruthpillai/reactive-resume:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80/tcp"
        ],
        "volumes": [{
            "bind": "ReactiveResume",
            "container": "/usr/src/app"
        }],
        "categories": [
            "Resume"
        ]
    },{
        "title": "Redmine",
        "description": "Open-source project management tool",
        "note": "Default user and password are admin/admin",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
        "platform": "linux",
        "type": 1,
        "name": "Redmine",
        "image": "redmine:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "Redmine",
            "container": "/usr/src/redmine/files"
        }],
        "categories": [
            "Project-Management"
        ]
    },{
        "title": "Remina",
        "description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Remina",
        "image": "linuxserver/remmina:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3003:3000/tcp"
        ],
        "volumes": [{
            "bind": "Remina",
            "container": "/config"
        }],
        "env": [{
            "default": "admin",
            "description": "Username",
            "label": "CUSTOM_USER",
            "name": "CUSTOM_USER"
        },{
            "default": "admin",
            "description": "To Access the site",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "VNC"
        ]
    },{
        "title": "Requestrr",
        "description": "[Requestrr](https://github.com/darkalfx/requestrr) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
        "logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
        "platform": "linux",
        "type": 1,
        "name": "Requestrr",
        "image": "linuxserver/requestrr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "4545:4545/tcp"
        ],
        "volumes": [{
            "bind": "Requestrr",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
          "Bot"
        ]
      },{
        "title": "Resilio-Sync",
        "description": "[Resilio-sync](https://www.resilio.com/individuals/) (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.",
        "logo": "https://www.resilio.com/img/individual/freeproduct.jpg",
        "platform": "linux",
        "type": 1,
        "name": "Resilio-Sync",
        "image": "linuxserver/resilio-sync:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8888:8888/tcp",
          "55555:55555/tcp"
        ],
        "volumes": [{
            "bind": "Resilio-Sync-Config",
            "container": "/config"
        },{
            "bind": "Resilio-Sync-Downloads",
            "container": "/downloads"
        },{
            "bind": "Resilio-Sync",
            "container": "/sync"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Torrent"
        ]
      },{
        "title": "RDesktop",
        "description": "[Rdesktop](http://xrdp.org/) - Ubuntu based containers containing full desktop environments in officially supported flavors accessible via RDP.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
        "platform": "linux",
        "type": 1,
        "name": "RDesktop",
        "image": "linuxserver/rdesktop:latest",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "ports": [
            "3389:3389/tcp"
        ],
        "volumes": [{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        },{
            "bind": "RDesktop",
            "container": "/config"
        }],
        "categories": [
            "VNC"
        ]
    },{
        "title": "Readme-Sync",
        "description": "This container needs special attention. Please check [here](https://hub.docker.com/r/linuxserver/readme-sync) for details.",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Readme-Sync",
        "image": "linuxserver/readme-sync:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Readme-Sync",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "Rsnapshot",
        "description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
        "platform": "linux",
        "type": 1,
        "name": "Rsnapshot",
        "image": "linuxserver/rsnapshot:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "80:80/tcp"
        ],
        "volumes": [{
            "bind": "RSnapShot-Config",
            "container": "/config"
        },{
            "bind": "RSnapShot-Snapshots",
            "container": "/.snapshots"
        },{
            "bind": "RSnapShot-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Backup"
        ]
    },{
        "title": "RUTorrent",
        "description": "Popular torrent client with a webui for ease of use.",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "RUTorrent",
        "image": "linuxserver/rutorrent:latest",
        "ports": [
            "80/tcp",
            "51413/tcp",
            "6881/udp"
        ],
        "volumes": [{
            "bind": "RUTorrent-Config",
            "container": "/config"
        },{
            "bind": "RUTorrent-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "category": [
            "Torrent"
        ]
    },{
        "title": "Sabnzbd",
        "description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "SabnZBD",
        "image": "linuxserver/sabnzbd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8080:8080/tcp",
          "9090:9090/tcp"
        ],
        "volumes": [{
            "bind": "SabnZBD-Config",
            "container": "/config"
        },{
            "bind": "SabnZBD-Downloads",
            "container": "/downloads"
        },{
            "bind": "SabnZBD-Incomplete-Downloads",
            "container": "/incomplete-downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Automation"
        ]
    },{
        "title": "Scality S3",
        "description": "Standalone AWS S3 protocol server",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
        "platform": "linux",
        "type": 1,
        "name": "Scality",
        "image": "scality/s3server",
        "restart_policy": "unless-stopped",
        "ports": [
            "8000:8000/tcp"
        ],
        "volumes": [{
            "bind": "Scality-Data",
            "container": "/usr/src/app/localData"
        },{
            "bind": "Scality-MetaData",
            "container": "/usr/src/app/localMetadata"
        }],
        "env": [{
            "default": "admin",
            "name": "SCALITY_ACCESS_KEY",
            "label": "Scality S3 access key"
        },{
            "default": "admin",
            "name": "SCALITY_SECRET_KEY",
            "label": "Scality S3 secret key"
        }],
        "categories": [
            "Storage"
        ]
      },{
        "title": "Scrutiny",
        "description": "[Scrutiny](https://github.com/AnalogJ/scrutiny) WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution, merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
        "logo": "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/docs/dashboard.png",
        "platform": "linux",
        "type": 1,
        "name": "Scrutiny",
        "image": "linuxserver/scrutiny:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "Scrutiny",
            "container": "/config"
        },{
            "bind": "/run/udev:ro",
            "container": "/run/udev:ro"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "http://localhost:8080",
            "description": "# optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector",
            "label": "SCRUTINY_API_ENDPOINT",
            "name": "SCRUTINY_API_ENDPOINT"
        },{
            "default": "true",
            "description": "# optional - Run the web service.",
            "label": "SCRUTINY_WEB",
            "name": "SCRUTINY_WEB"
        },{
            "default": "true",
            "description": "# optional - Run the metrics collector.",
            "label": "SCRUTINY_COLLECTOR",
            "name": "SCRUTINY_COLLECTOR"
        }],
        "categories": [
            "Storage"
        ]
      },{
        "title": "SickChill",
        "description": "[Sickchill](https://github.com/SickChill/SickChill) is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "SickChill",
        "image": "linuxserver/sickchill:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8081:8081/tcp"
        ],
        "volumes": [{
            "bind": "SickChill-Config",
            "container": "/config"
        },{
            "bind": "SickChill-Downloads",
            "container": "/downloads"
        },{
            "bind": "SickChill-TV",
            "container": "/tv"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use, for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "SickGear",
        "description": "[SickGear](https://github.com/sickgear/sickgear) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.. For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear",
        "logo": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
        "platform": "linux",
        "type": 1,
        "name": "SickGear",
        "image": "linuxserver/sickgear:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8081:8081/tcp"
        ],
        "volumes": [{
            "bind": "SickGear-Config",
            "container": "/config"
        },{
            "bind": "SickGear-TV",
            "container": "/tv"
        },{
            "bind": "SickGear-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        }],
        "category": [
		    "Movies"
	    ]
      },{
        "title": "Sematext Docker Agent",
        "description": "Collect logs, metrics and docker events",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
        "platform": "linux",
        "type": 1,
        "image": "sematext/sematext-agent-docker:latest",
        "name": "sematext-agent",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "volumes": [{
            "container": "/var/run/docker.sock",
            "bind": "/var/run/docker.sock"
        }],
        "env": [{
            "default": "admin",
            "name": "LOGSENE_TOKEN",
            "label": "Logs token"
        },{
            "default": "admin",
            "name": "SPM_TOKEN",
            "label": "SPM monitoring token"
        }],
        "categories": [
            "Log Management", 
            "Monitoring"
        ]
      },{
        "title": "SmokePing",
        "description": "Smokeping keeps track of your network latency.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/smokeping-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "SmokePing",
        "image": "linuxserver/smokeping:latest",
        "restart_policy": "unless-stopped",
        "ports": [
		    "8084:80/tcp"
	    ],
        "volumes": [{
            "bind": "SmokePing-Config",
		    "container": "/config"
	    },{
            "bind": "SmokePing-Data",
		    "container": "/data"
 	    }],
        "category": [
		    "Management"
	    ]
    },{
        "title": "Snapdrop",
        "description": "[Snapdrop](https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.",
        "logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
        "platform": "linux",
        "type": 1,
        "name": "SnapDrop",
        "image": "linuxserver/snapdrop:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "80:80/tcp",
          "443:443/tcp"
        ],
        "volumes": [{
            "bind": "SnapDrop",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "Snibox",
        "description": "Self-hosted snippet manager.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/snibox.png",
        "platform": "linux",
        "type": 1,
        "name": "snibox",
        "image": "snowmean/snibox-sqlite:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3010:3000/tcp"
        ],
        "volumes": [{
            "bind": "Snibox",
            "container": "/app/db/database"
        }],
        "categories": [
            "Other",
            "Tools"
        ]
    },{
        "title": "Shiori",
        "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as a command-line application or as a web application.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/shiori-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "shiori",
        "image": "radhifadlillah/shiori:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080/tcp"
        ],
        "volumes": [{
            "bind": "Shiori",
            "container": "/srv/shiori"
        }],
        "categories": [
            "Bookmarks"
        ]
    },{
        "title": "Snipe-it",
        "description": "[Snipe-it](https://github.com/snipe/snipe-it) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
        "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
        "platform": "linux",
        "type": 1,
        "name": "Snipe-it",
        "image": "linuxserver/snipe-it:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8080:80/tcp"
        ],
        "volumes": [{
            "bind": "Snipe-IT",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "<hostname or ip>",
            "description": "Hostname or IP and port if applicable IE <ip or hostname>:8080",
            "label": "NGINX_APP_URL",
            "name": "NGINX_APP_URL"
        },{
            "default": "<mysql host>",
            "description": "Mysql hostname or IP to use",
            "label": "MYSQL_PORT_3306_TCP_ADDR",
            "name": "MYSQL_PORT_3306_TCP_ADDR"
        },{
            "default": "<mysql port>",
            "description": "Mysql port to use",
            "label": "MYSQL_PORT_3306_TCP_PORT",
            "name": "MYSQL_PORT_3306_TCP_PORT"
        },{
            "default": "<mysql database>",
            "description": "Mysql database to use",
            "label": "MYSQL_DATABASE",
            "name": "MYSQL_DATABASE"
        },{
            "default": "<mysql pass>",
            "description": "Mysql user to use",
            "label": "MYSQL_USER",
            "name": "MYSQL_USER"
        },{
            "default": "changeme",
            "description": "Mysql password to use",
            "label": "MYSQL_PASSWORD",
            "name": "MYSQL_PASSWORD"
        }],
        "categories": [
            "Management"
        ]
    },{
        "title": "Solr",
        "description": "Open-source enterprise search platform",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
        "platform": "linux",
        "type": 1,
        "name": "Solr",
        "image": "solr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8983:8983/tcp"
        ],
        "volumes": [{
            "bind": "Solr",
            "container": "/opt/solr/mydata"
	    }],
        "categories": [
            "Search-Engine"
        ]
    },{
        "title": "Sonarr",
        "description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Sonarr",
        "image": "linuxserver/sonarr:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8989:8989/tcp"
        ],
        "volumes": [{
            "bind": "Sonarr-Config",
            "container": "/config"
        },{
            "bind": "Sonarr-TV",
            "container": "/tv"
        },{
            "bind": "Sonarr-Downloads",
            "container": "/downloads"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ"
        }],
        "categories": [
            "Torrent"
        ]
    },{
        "title": "SQLiteBrowser",
        "description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "SQLiteBrowser",
        "image": "linuxserver/sqlitebrowser:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "3000:3000/tcp"
        ],
        "volumes": [
          {
            "bind": "SQLiteBrowser",
            "container": "/config"
          }
        ],
        "env": [
          {
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
          },
          {
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
          },
          {
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
          }
        ],
        "categories": [
            "Database"
        ]
    },{
        "title": "SQL Server",
        "description": "Microsoft SQL Server on Linux",
        "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "platform": "linux",
        "type": 1,
        "name": "SQLServer",
        "image": "mcr.microsoft.com/mssql/server:2019-latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "1433:1433/tcp"
        ],
        "env": [{
            "default": "Y",
            "name": "ACCEPT_EULA",
            "preset": true
        },{
            "default": "admin",
            "name": "SA_PASSWORD",
            "label": "SA password"
        }],
        "categories": [
            "Database"
        ]
      },{
        "title": "SQL Server Dev",
        "description": "Microsoft SQL Server Developer for Windows containers",
        "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "platform": "windows",
        "type": 1,
        "name": "SQLServerDev",
        "image": "microsoft/mssql-server-windows-developer:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "1433:1433/tcp"
        ],
        "volumes": [{
            "bind": "SQLServerDev",
            "container": "C:/temp/"
        }],
        "env": [{
            "default": "Y",
            "name": "ACCEPT_EULA",
            "preset": true
        },{
            "default": "admin",
            "name": "sa_password",
            "label": "SA password"
        }],
        "categories": [
            "Database"
        ]
      },{
        "title": "SQL Server Express",
        "description": "Microsoft SQL Server Express for Windows containers",
        "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "platform": "windows",
        "type": 1,
        "name": "SQLServerExpress",
        "image": "microsoft/mssql-server-windows-express:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "1433:1433/tcp"
        ],
        "volumes": [{
            "bind": "SQLServerExpress",
            "container": "C:/temp/"
        }],
        "env": [{
            "default": "Y",
            "name": "ACCEPT_EULA",
            "preset": true
        },{
            "default": "admin",
            "name": "sa_password",
            "label": "SA password"
        }],
        "categories": [
            "Database"
        ]
      },{
        "title": "Swag",
        "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
        "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
        "platform": "linux",
        "type": 1,
        "name": "Swag",
        "image": "linuxserver/swag:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "443:443/tcp",
          "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Swag",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "yourdomain.url",
            "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns).",
            "label": "URL",
            "name": "URL"
        },{
            "default": "http",
            "description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`).",
            "label": "VALIDATION",
            "name": "VALIDATION"
        },{
            "default": "www,",
            "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)",
            "label": "SUBDOMAINS",
            "name": "SUBDOMAINS"
        },{
            "default": "",
            "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.",
            "label": "CERTPROVIDER",
            "name": "CERTPROVIDER"
        },{
            "default": "cloudflare",
            "description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `domeneshop`, `gandi`, `gehirn`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.",
            "label": "DNSPLUGIN",
            "name": "DNSPLUGIN"
        },{
            "default": "",
            "description": "Optionally override (in seconds) the default propagation time for the dns plugins.",
            "label": "PROPAGATION",
            "name": "PROPAGATION"
        },{
            "default": "",
            "description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org",
            "label": "DUCKDNSTOKEN",
            "name": "DUCKDNSTOKEN"
        },{
            "default": "",
            "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).",
            "label": "EMAIL",
            "name": "EMAIL"
        },{
            "default": "false",
            "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`",
            "label": "ONLY_SUBDOMAINS",
            "name": "ONLY_SUBDOMAINS"
        },{
            "default": "",
            "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`",
            "label": "EXTRA_DOMAINS",
            "name": "EXTRA_DOMAINS"
        },{
            "default": "false",
            "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.",
            "label": "STAGING",
            "name": "STAGING"
        }],
        "categories": [
            "Database"
        ]
    },{
        "title": "Synclounge",
        "description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Synclounge",
        "image": "linuxserver/synclounge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8088:8088/tcp"
        ],
        "env": [{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ"
        },{
            "default": "plexuser1,plexuser2,email1,machineid1",
            "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces.",
            "label": "AUTH_LIST",
            "name": "AUTH_LIST"
        },{
            "default": "false",
            "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var).",
            "label": "AUTOJOIN_ENABLED",
            "name": "AUTOJOIN_ENABLED"
        },{
            "default": "roomname",
            "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`).",
            "label": "AUTOJOIN_ROOM",
            "name": "AUTOJOIN_ROOM"
        }],
        "categories": [
            "Plex"
        ]
    },{
        "title": "SyncThing",
        "description": "[Syncthing](https://syncthing.net) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "SyncThing",
        "image": "linuxserver/syncthing:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "8384:8384/tcp",
          "22000:22000/tcp",
          "22000:22000/udp",
          "21027:21027/udp"
        ],
        "volumes": [
          {
            "bind": "SyncThing-Config",
            "container": "/config"
          },
          {
            "bind": "SyncThing-Data1",
            "container": "/data1"
          },
          {
            "bind": "SyncThing-Data2",
            "container": "/data2"
          }
        ],
        "env": [
          {
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
          },
          {
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
          },
          {
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
          }
        ],
        "categories": [
            "Cloud"
        ]
      },{
        "title": "Syslog-ng",
        "description": "[syslog-ng](https://www.syslog-ng.com/products/open-source-log-management/) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Syslog-ng",
        "image": "linuxserver/syslog-ng:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "514:5514/udp",
          "601:6601/tcp",
          "6514:6514/tcp"
        ],
        "volumes": [{
            "bind": "SysLog-NG",
            "container": "/config"
        },{
            "bind": "/var/log",
            "container": "/var/log"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Management"
        ]
    },{
        "title": "Taisun",
        "description": "[Taisun](https://www.taisun.io/) is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server. Taisun allows you to: - Deploy and manage web based virtual desktops. - Deploy Taisun specific stacks of applications - Browse available images on popular Docker repositories - Import a Docker project from any git repository and start developing on your choice of web based IDE or full Linux desktop - Spinup a developer container based on popular frameworks and work from a web based IDE - Single click remote server access to Taisun and your Docker applications",
        "logo": "https://raw.githubusercontent.com/Taisun-Docker/taisun/master/public/favicon/apple-icon-180x180.png",
        "platform": "linux",
        "type": 1,
        "name": "Taisun",
        "image": "linuxserver/taisun:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3004:3000/tcp"
        ],
        "volumes": [{
            "container": "/var/run/docker.sock",
            "bind": "/var/run/docker.sock"
        }],
        "categories": [
            "Management",
            "Need"
        ]
    },{
        "title": "Tautulli",
        "description": "Tautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.",
        "note": "Documentation on this container can be found here: [https://hub.docker.com/r/goofball222/pritunl](https://hub.docker.com/r/goofball222/pritunl)",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
        "platform": "linux",
        "type": 3,
        "name": "pritunl",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "Pritunl",
            "container": "/config"
        }],
        "env": [{
            "default": "false",
            "label": "REVERSE_PROXY",
            "name": "REVERSE_PROXY"
        },{
            "default": "",
            "label": "PRITUNL_OPTS",
            "name": "PRITUNL_OPTS"
        },{
            "default": "mongodb://mongo:27017/pritunl",
            "label": "MONGODB_URI",
            "name": "MONGODB_URI"
        },{
            "default": "false",
            "label": "WIREGUARD",
            "name": "WIREGUARD"
        }],
        "categories": [
            "VPN",
            "Management"
        ]
    },{
        "title": "TheLounge",
        "description": "[Thelounge](https://thelounge.github.io/) (a fork of shoutIRC) is a web IRC client that you host on your own server.",
        "logo": "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true",
        "platform": "linux",
        "type": 1,
        "name": "TheLounge",
        "image": "linuxserver/thelounge:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "9000:9000/tcp"
        ],
        "volumes": [{
            "bind": "TheLounge",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "IRC"
        ]
    },{
        "title": "TiddlyWiki",
        "description": "A unique, non-linear notebook wiki.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tiddlywiki.png",
        "platform": "linux",
        "type": 1,
        "name": "tiddlyWiki",
        "image": "mazzolino/tiddlywiki:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8080:8080/tcp"
        ],
        "volumes": [{
            "bind": "TiddlyWiki",
            "container": "/var/lib/tiddlywiki"
        }],
        "categories": [
            "Wiki"
        ]
    },{
        "title": "Tiny Tiny RSS",
        "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tt-rss-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Tiny-Tiny-RSS",
        "image": "lunik1/tt-rss:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "Tiny-Tiny-RSS",
            "container": "/config"
        }],
        "env": [{
            "label": "PUID",
            "name": "PUID",
            "default": "1000",
            "preset":true
        },{
            "label": "PGID",
            "name": "PGID",
            "default": "1000",
            "preset":true
        }],
        "categories": [
            "RSS"
        ]
    },{
        "title": "TOSIBOX Lock for Container",
        "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
        "platform": "linux",
        "type": 3,
        "name": "TOSIBOX",
        "restart_policy": "unless-stopped",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/tosibox/docker-compose.yml"
        },
        "env": [{
            "default": "admin",
            "name": "LICENSE_KEY",
            "label": "License key"
        }],
        "categories": [
            "Cloud"
        ]
      },{
        "title": "Transmission",
        "description": "[Transmission](https://www.transmissionbt.com/) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png",
        "platform": "linux",
        "type": 1,
        "name": "Transmission",
        "image": "linuxserver/transmission:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "9091:9091/tcp",
          "51413:51413/tcp",
          "51413:51413/udp"
        ],
        "volumes": [{
            "bind": "Transmission-Config",
            "container": "/config"
        },{
            "bind": "Transmission-Downloads",
            "container": "/downloads"
        },{
            "bind": "Transmission-Watch",
            "container": "/watch"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "/combustion-release/",
            "description": "Specify an alternative UI options are [`/combustion-release/`](https://github.com/Secretmapper/combustion), [`/transmission-web-control/`](https://github.com/ronggang/transmission-web-control), [`/kettu/`](https://github.com/endor/kettu) and [`/flood-for-transmission/`](https://github.com/johman10/flood-for-transmission).",
            "label": "TRANSMISSION_WEB_HOME",
            "name": "TRANSMISSION_WEB_HOME"
        },{
            "default": "username",
            "description": "Specify an optional username for the interface",
            "label": "USER",
            "name": "USER"
        },{
            "default": "password",
            "description": "Specify an optional password for the interface",
            "label": "PASS",
            "name": "PASS"
        },{
            "default": "iplist",
            "description": "Specify an optional list of comma separated ip whitelist. Fill rpc-whitelist setting.",
            "label": "WHITELIST",
            "name": "WHITELIST"
        },{
            "default": "dnsnane list",
            "description": "Specify an optional list of comma separated dns name whitelist. Fill rpc-host-whitelist setting.",
            "label": "HOST_WHITELIST",
            "name": "HOST_WHITELIST"
        }],
        "categories": [
            "Torrent"
        ]
    },{
        "title": "Transmission-OpenVPN",
        "description": "This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "transmission-openvpn",
        "image": "haugene/transmission-openvpn:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "Transmission-OpenVPN-Downloads",
            "container": "/data"
        },{
            "bind": "/etc/localtime",
            "container": "/etc/localtime"
        }],
        "env": [{
            "label": "PUID",
            "name": "PUID",
            "default": "1000",
            "preset":true
        },{
            "label": "PGID",
            "name": "PGID",
            "default": "1000",
            "preset":true
        },{
            "label": "OPENVPN_PROVIDER",
            "name": "OPENVPN_PROVIDER",
            "default": "MULLVAD",
            "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/"
        },{
            "label": "admin",
            "name": "OPENVPN_USERNAME",
            "default": ""
        },{
            "label": "admin",
            "name": "OPENVPN_PASSWORD",
            "default": ""
        },{
            "label": "LOCAL_NETWORK",
            "name": "LOCAL_NETWORK",
            "default": "192.168.0.0/24"
        }],
        "categories": [
            "VPN"
        ]
    },{
        "title": "Trilium",
        "description": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases",
        "logo": "https://www.saashub.com/images/app/service_logos/55/2901389fab77/large.png?1561117248",
        "platform": "linux",
        "type": 1,
        "name": "Trilium",
        "image": "zadam/trilium:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3388:8080/tcp"
        ],
        "volumes": [{
            "bind": "Trilium",
            "container": "/home/node/trilium-data"
        }],
        "env": [{
            "default": "/home/node/trilium-data",
            "label": "TRILIUM_DATA_DIR",
            "name": "TRILIUM_DATA_DIR"
        },{
            "default": "3388",
            "label": "PORT",
            "name": "PORT"
        }],
        "categories": [
            "Notes Server"
        ]
    },{
        "title": "TVHeadEnd",
        "description": "[Tvheadend](https://www.tvheadend.org/) works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png",
        "platform": "linux",
        "type": 1,
        "name": "TVHeadEnd",
        "image": "linuxserver/tvheadend:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "9981:9981/tcp",
          "9982:9982/tcp"
        ],
        "volumes": [{
            "bind": "TVHeadEnd-Config",
            "container": "/config"
        },{
            "bind": "TVHeadEnd-Recordings",
            "container": "/recordings"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "<run options here>",
            "description": "Optionally specify additional arguments to be passed. See Additional runtime parameters.",
            "label": "RUN_OPTS",
            "name": "RUN_OPTS"
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "UbooQuity",
        "description": "[Ubooquity](https://vaemendis.net/ubooquity/) is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "UbooQuity",
        "image": "linuxserver/ubooquity:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "2202:2202/tcp",
          "2203:2203/tcp"
        ],
        "volumes": [{
            "bind": "UbooQuity-Config",
            "container": "/config"
        },{
            "bind": "UbooQuity-Books",
            "container": "/books"
        },{
            "bind": "UbooQuity-Comics",
            "container": "/comics"
        },{
            "bind": "UbooQuity-Files",
            "container": "/files"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "<maxmem>",
            "description": "To set the maximum memory. ( ex: set '1024' for 1GB )",
            "label": "MAXMEM",
            "name": "MAXMEM"
        }],
        "categories": [
            "Books"
        ]
    },{
        "title": "Ubuntu",
        "description": "Debian-based Linux operating system with no VNC",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
        "platform": "linux",
        "type": 1,
        "name": "Ubuntu",
        "image": "ubuntu:latest",
        "restart_policy": "unless-stopped",
        "interactive": true,
        "command": "/bin/bash",
        "categories": [
            "Linux"
        ]
      },{
        "title": "Unifi-Controller",
        "description": "The [Unifi-controller](https://www.ubnt.com/enterprise/#unifi) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Unifi-Controller",
        "image": "linuxserver/unifi-controller:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "3478:3478/udp",
          "10001:10001/udp",
          "8080:8080/tcp",
          "8443:8443/tcp",
          "1900:1900/udp",
          "8843:8843/tcp",
          "8880:8880/tcp",
          "6789:6789/tcp",
          "5514:5514/udp"
        ],
        "volumes": [{
            "bind": "Unifi-Controller",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "1024M",
            "description": "Optionally change the Java memory limit (-Xmx) (default is 1024M).",
            "label": "MEM_LIMIT",
            "name": "MEM_LIMIT"
        },{
            "default": "1024M",
            "description": "Optionally change the Java initial memory (-Xms) (default is 1024M).",
            "label": "MEM_STARTUP",
            "name": "MEM_STARTUP"
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "UniFi Video",
        "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti’s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature‑packed user interface with advanced features such as motion detection, auto‑discovery, user‑level security, storage management, reporting, and mobile device support.",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/UniFiVideo-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "UnifFi Video",
        "image": "pducharme/unifi-video-controller:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "1935:1935/tcp",
          "7444:7444/tcp",
          "7447:7447/tcp",
          "6666:6666/tcp",
          "7442:7442/tcp",
          "7080:7080/tcp",
          "7443:7443/tcp",
          "7445:7445/tcp",
          "7446:7446/tcp"
        ],
        "volumes": [{
            "bind": "UnifFiVideo-Recordings",
            "container": "/recordings"
        },{
            "bind": "UnifFiVideo-Config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "002",
            "label": "UMASK",
            "name": "UMASK"
        },{
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH",
            "set": "UniFi Video"
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "URBackup",
        "description": "Open-source network backup",
        "note": "This application web interface is exposed on the port 55414 inside the container.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
        "platform": "linux",
        "type": 1,
        "name": "URBackup",
        "image": "cfstras/urbackup",
        "restart_policy": "unless-stopped",
        "ports": [
          "55413:55413/tcp",
          "55414:55414/tcp",
          "55415:55415/tcp",
          "35622:35622/tcp"
        ],
        "volumes": [{
            "bind": "URBackup",
            "container": "/var/urbackup"
        }],
        "categories": [
          "Backup"
        ]
    },{
        "title": "VaultWarden",
        "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
        "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bitwarden.png",
        "platform": "linux",
        "type": 1,
        "name": "VaultWarden",
        "image": "vaultwarden/server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "VaultWarden",
            "container": "/config"
        }],
        "categories": [
            "Other",
            "Tools"
        ]
    },{
        "title": "Vscodium",
        "description": "[VSCodium](https://vscodium.com/) is a community-driven, freely-licensed binary distribution of Microsoft’s editor VS Code.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/vscodium/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/vscodium-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Vscodium",
        "image": "linuxserver/vscodium:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "/volume1/docker/vscodium/config",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Development"
        ]
    },{
        "title": "Yacht",
        "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
        "platform": "linux",
        "type": 1,
        "name": "Yacht",
        "image": "selfhostedpro/yacht:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "8001:8000/tcp"
        ],
        "volumes": [{
            "bind": "Yacht",
            "container": "/config"
        },{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "categories": [
            "Docker"
        ]
    },{
        "title": "YouTubeDL-Material",
        "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ytdlm.png",
        "platform": "linux",
        "type": 1,
        "name": "YouTubeDL-Material",
        "image": "tzahi12345/youtubedl-material:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "17442:17442/tcp"
        ],
        "volumes": [{
            "bind": "YouTubeDL-Material-AppData",
            "container": "/app/appdata"
        },{
            "bind": "YouTubeDL-Material-Video",
            "container": "/app/video"
        },{
            "bind": "YouTubeDL-Material-Subscriptions",
            "container": "/app/subscriptions"
        },{
            "bind": "YouTubeDL-Material-Users",
            "container": "/app/users"
        },{
            "bind": "YouTubeDL-Material-Audio",
            "container": "/app/audio"
        }],
        "categories": [
            "Other",
            "Downloaders"
        ]
    },{
        "title": "YOURLS",
        "description": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. You'll have full control over your data, detailed stats, analytics, plugins, and more. It's free.",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/1b75e08d68679797623d98ba82ca80090f5a26d2/yourls/logo.svg?sanitize=true",
        "platform": "linux",
        "type": 1,
        "name": "YOURLS",
        "image": "yourls:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "96:80/tcp"
        ],
        "volumes": [{
            "bind": "YOURLS",
            "container": "/app/data"
        }],
        "env": [{
            "name": "YOURLS_DB_HOST",
            "label": "YOURLS_DB_HOST",
            "default": "1.1.1.1",
            "description": "The address for your Database"
        },{
            "name": "YOURLS_DB_USER",
            "label": "YOURLS_DB_USER",
            "default": "example",
            "description": "The Username for your database"
        },{
            "name": "YOURLS_DB_PASS",
            "label": "YOURLS_DB_PASS",
            "default": "example",
            "description": "Your password for your database"
        },{
            "name": "YOURLS_DB_PREFIX",
            "label": "YOURLS_DB_PREFIX",
            "default": "myuser",
            "description": "Specify a basic auth user."
        },{
            "name": "YOURLS_SITE",
            "label": "YOURLS_SITE",
            "default": "https://example.com",
            "description": "Web Address for YOURLS"
        },{
            "name": "YOURLS_USER",
            "label": "YOURLS_USER",
            "default": "admin",
            "description": "Username for YOURLS"
        },{
            "name": "YOURLS_PASS",
            "label": "YOURLS_PASS",
            "default": "admin",
            "description": "Password for YOURLS"
        }],
        "categories": [
            "Tools"
        ]
    },{
        "title": "WatchTower",
        "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/watchtower.png",
        "platform": "linux",
        "type": 1,
        "name": "WatchTower",
        "image": "containrrr/watchtower:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        }],
        "categories": [
            "Docker"
        ]
    },{
        "title": "WebCord",
        "description": "[WebCord](https://github.com/SpacingBat3/WebCord) can be summarized as a pack of security and privacy hardenings, Discord features reimplementations, Electron / Chromium / Discord bugs workarounds, stylesheets, internal pages and wrapped https://discord.com page, designed to conform with ToS as much as it is possible (or hide the changes that might violate it from Discord's eyes).",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webcord-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "WebCord",
        "image": "linuxserver/webcord:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "WebCord",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Chat"
        ]
    },{
        "title": "WebGrabPlus",
        "description": "[Webgrabplus](http://www.webgrabplus.com) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
        "logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
        "platform": "linux",
        "type": 1,
        "name": "WebGrabPlus",
        "image": "linuxserver/webgrabplus:latest",
        "restart_policy": "unless-stopped",
        "volumes": [
          {
            "bind": "WebGrabPlus-Config",
            "container": "/config"
          },
          {
            "bind": "WebGrabPlus-Data",
            "container": "/data"
          }
        ],
        "env": [
          {
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
          },
          {
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
          },
          {
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
          }
        ],
        "categories": [
            "Movies"
        ]
    },{
        "title": "Website",
        "description": "PHP is a server-side scripting language designed for web development, but which can also be used as a general-purpose programming language. PHP can be added to straight HTML or it can be used with a variety of templating engines and web frameworks. PHP code is usually processed by an interpreter, which is either implemented as a native module on the web-server or as a common gateway interface (CGI).",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/01c12653951b2fe592c1f93a13b4e289ada0e3a1/php/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Website",
        "image": "php:8.1.3RC1-apache",
        "restart_policy": "unless-stopped",
        "ports": [
            "90:80/tcp"
        ],
        "volumes": [{
            "bind": "Website",
            "container": "/var/www/html"
        }],
        "categories": [
            "Webserver"
        ]
    },{
        "title": "Wikijs",
        "description": "[Wikijs](https://github.com/Requarks/wiki) A modern, lightweight and powerful wiki app built on NodeJS.",
        "logo": "https://static.requarks.io/logo/wikijs-full.svg",
        "platform": "linux",
        "type": 1,
        "name": "WikiJS",
        "image": "linuxserver/wikijs:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "3000:3000/tcp"
        ],
        "volumes": [{
            "bind": "WikiJS-Config",
            "container": "/config"
        },{
            "bind": "WikiJS-Data",
            "container": "/data"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Wiki"
        ]
    },{
        "title": "WireGuard",
        "description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
        "logo": "https://www.wireguard.com/img/wireguard.svg",
        "platform": "linux",
        "type": 1,
        "name": "WireGuard",
        "image": "linuxserver/wireguard:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "51820:51820/udp"
        ],
        "volumes": [{
            "bind": "WireGuard-Config",
            "container": "/config"
        },{
            "bind": "WireGuard-Modules",
            "container": "/lib/modules"
        }],
        "env": [{
            "default": "wireguard.domain.com",
            "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically",
            "label": "SERVERURL",
            "name": "SERVERURL"
        },{
            "default": "51820",
            "description": "External port for docker host. Used in server mode.",
            "label": "SERVERPORT",
            "name": "SERVERPORT"
        },{
            "default": "1",
            "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)",
            "label": "PEERS",
            "name": "PEERS"
        },{
            "default": "auto",
            "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward.",
            "label": "PEERDNS",
            "name": "PEERDNS"
        },{
            "default": "10.13.13.0",
            "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.",
            "label": "INTERNAL_SUBNET",
            "name": "INTERNAL_SUBNET"
        },{
            "default": "0.0.0.0/0",
            "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1.",
            "label": "ALLOWEDIPS",
            "name": "ALLOWEDIPS"
        }],
        "categories": [
            "VPN"
        ]
    },{
        "title": "WireShark",
        "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "WireShark",
        "image": "linuxserver/wireshark:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "security_opt": [
            "seccomp=unconfined"
        ],
        "cap_add": [
            "NET_ADMIN"
        ],
        "ports": [
            "3015:3000/tcp"
        ],
        "volumes": [{
            "bind": "WireShark",
            "container": "/config"
        },{
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
        },{
            "bind": "/home/user/docker-data",
            "container": "/var/lib/docker"
        }],
        "env": [{
            "default": "admin",
            "description": "CUSTOM_USER",
            "label": "CUSTOM_USER",
            "name": "CUSTOM_USER"
        },{
            "default": "admin",
            "description": "PASSWORD",
            "label": "PASSWORD",
            "name": "PASSWORD"
        },{
            "default": "WireShark",
            "description": "TITLE",
            "label": "TITLE",
            "name": "TITLE"
        },{
            "default": "1000",
            "description": "PUID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "PGID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "TZ",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Security",
            "Tools"
        ]
    },{
        "title": "Whoogle",
        "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/whoogle.png",
        "platform": "linux",
        "type": 1,
        "name": "whoogle",
        "image": "benbusby/whoogle-search:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "5001:5000/tcp"
            ],
        "volumes": [{
            "bind": "Whoogle",
            "container": "/config"
        }],
        "env": [{
                "default": "admin",
                "description": "WHOOGLE_USER",
                "label": "WHOOGLE_USER",
                "name": "WHOOGLE_USER"
            },{
                "default": "admin",
                "description": "WHOOGLE_PASS",
                "label": "WHOOGLE_PASS",
                "name": "WHOOGLE_PASS"
            }],
        "categories": [
            "Search"
        ]
    },{
        "title": "WordPress",
        "description": "WordPress setup with a MySQL database",
        "note": "Deploys a WordPress instance connected to a MySQL database.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
        "platform": "linux",
        "type": 3,
        "name": "WordPress",
        "restart_policy": "unless-stopped",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/wordpress/docker-compose.yml"
        },
        "env": [{
            "default": "admin",
            "name": "MYSQL_DATABASE_PASSWORD",
            "label": "Database root password",
            "description": "Password used by the MySQL root user."
        }],
        "categories": [
            "CMS",
            "Webserver"
        ]
    },{
        "title": "Wowza",
        "description": "Streaming media server",
        "note": "",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
        "platform": "linux",
        "type": 1,
        "name": "Wowza",
        "image": "sameersbn/wowza:4.1.2-8",
        "restart_policy": "unless-stopped",
        "ports": [
            "1935:1935/tcp",
            "8086:8086/tcp",
            "8087:8087/tcp",
            "8088:8088/tcp"
        ],
        "volumes": [{
            "bind": "Wowza",
            "container": "/var/lib/wowza"
        }],
        "env": [{
            "default": "yes",
            "description": "Agree to Wowza EULA",
            "label": "Agree to Wowza EULA",
            "name": "WOWZA_ACCEPT_LICENSE"
        },{
            "description": "License key",
            "label": "License key",
            "name": "WOWZA_KEY"
        }],
        "categories": [
            "Movies"
        ]
    },{
        "title": "WPS-Office",
        "description": "[WPS Office](https://www.wps.com/) is a lightweight, feature-rich comprehensive office suite with high compatibility. As a handy and professional office software, WPS Office allows you to edit files in Writer, Presentation, Spreadsheet, and PDF to improve your work efficiency.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wps-office/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wps-office-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "WPS-Office",
        "image": "linuxserver/wps-office:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "3000:3000/tcp",
            "3001:3001/tcp"
        ],
        "volumes": [{
            "bind": "WPS-Office",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Office"
        ]
    },{
        "title": "XBackBone",
        "description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
        "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
        "platform": "linux",
        "type": 1,
        "name": "XBackBone",
        "image": "linuxserver/xbackbone:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "80:80/tcp",
          "443:443/tcp"
        ],
        "volumes": [{
            "bind": "XBackBone",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "File Management"
        ]
    },{
        "title": "Your_spotify",
        "description": "[Your_spotify](https://github.com/Yooooomi/your_spotify) is a self-hosted application that tracks what you listen and offers you a dashboard to explore statistics about it! It's composed of a web server which polls the Spotify API every now and then and a web application on which you can explore your statistics.",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/your_spotify-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Your_spotify",
        "image": "linuxserver/your_spotify:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp",
            "443:443/tcp"
        ],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        },{
            "default": "http://localhost",
            "description": "The protocol and hostname where the app will be accessed.",
            "label": "APP_URL",
            "name": "APP_URL"
        },{
            "default": "",
            "description": "Your Spotify application client ID.",
            "label": "SPOTIFY_PUBLIC",
            "name": "SPOTIFY_PUBLIC"
        },{
            "default": "",
            "description": "Your Spotify application secret.",
            "label": "SPOTIFY_SECRET",
            "name": "SPOTIFY_SECRET"
        },{
            "default": "http://localhost:80,https://localhost:443",
            "description": "Allowed CORS sources, set to `all` to allow any source.",
            "label": "CORS",
            "name": "CORS"
        },{
            "default": "mongodb://mongo:27017/your_spotify",
            "description": "Set mongodb endpoint address/port.",
            "label": "MONGO_ENDPOINT",
            "name": "MONGO_ENDPOINT"
        }],
        "categories": [
            "Management"
        ]
    },{
        "title": "Yq",
        "description": "This container needs special attention. Please check [here](https://hub.docker.com/r/linuxserver/yq) for details.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Yq",
        "image": "linuxserver/yq:latest",
        "restart_policy": "unless-stopped",
        "ports": [
            "80:80/tcp"
        ],
        "volumes": [{
            "bind": "YQ",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for UserID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for GroupID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "Other"
        ]
    },{
        "title": "Znc",
        "description": "[Znc](http://wiki.znc.in/ZNC) is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
        "logo": "http://wiki.znc.in/resources/assets/wiki.png",
        "platform": "linux",
        "type": 1,
        "name": "Znc",
        "image": "linuxserver/znc:latest",
        "restart_policy": "unless-stopped",
        "ports": [
          "6501:6501/tcp"
        ],
        "volumes": [{
            "bind": "ZNC",
            "container": "/config"
        }],
        "env": [{
            "default": "1000",
            "description": "for GroupID",
            "label": "PUID",
            "name": "PUID",
            "preset":true
        },{
            "default": "1000",
            "description": "for UserID",
            "label": "PGID",
            "name": "PGID",
            "preset":true
        },{
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York",
            "label": "TZ",
            "name": "TZ",
            "preset":true
        }],
        "categories": [
            "IRC"
        ]
    }      
]}
