{
    "version": "2",
    "templates": [{
        "title": "MariaDB",   
        "description": "[Mariadb](https://mariadb.org/) is one of the most popular database servers. Made by the original developers of MySQL.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mariadb/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png",
        "platform": "linux",
        "type": 1,
        "name": "MariaDB", 
        "image": "linuxserver/mariadb:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                    "3306:3306/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/mariadb/config",
                "container": "/config"
            }],
        "categories": [
                "Need"
            ]
    },{
        "title": "PHPMyAdmin",
        "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/phpmyadmin/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "PHPMyAdmin",
        "image": "linuxserver/phpmyadmin:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "88:80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/phpmyadmin/config",
                "container": "/config"
            }],
        "env": [{
                "default": "127.0.0.1",
                "description": "IP of the MariaDB",
                "label": "PMA_HOSTS",
                "name": "PMA_HOSTS"
            }],
        "categories": [
                "Need"
            ]
    },{
        "title": "NGINX",
        "description": "[Nginx Proxy Manager] enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
        "platform": "linux",
        "type": 1,
        "name": "NGINX",
        "image": "jc21/nginx-proxy-manager",
        "restart_policy": "unless-stopped",
        "ports": [
                "80:80/tcp",
                "81:81/tcp",
                "443:443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/nginx/data",
                "container": "/data"
            },{
                "bind": "/var/lib/docker/volumes/nginx/letsencrypt",
                "container": "/etc/letsencrypt"
            }],
        "env": [{
                "default": "/data/database.sqlite",
                "label": "DB_SQLITE_FILE",
                "name": "DB_SQLITE_FILE"
            }],
        "categories": [
                "Proxy",
                "Tools"
            ]
    },{
        "title": "Guacamole",
        "description": "[Guacamole] is A clientless remote desktop gateway.",
        "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/guacamole.png",
        "platform": "linux",
        "type": 1,
        "name": "Guacamole",
        "image": "oznu/guacamole:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "8080:8080/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/guacamole/config",
                "container": "/config"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "MediaWiki",
        "description": "[MediaWiki] is free and open-source wiki software. Originally developed by Magnus Manske and improved by Lee Daniel Crocker, it runs on many websites, including Wikipedia, Wiktionary and Wikimedia Commons. It is written in the PHP programming language and stores the contents into a database. Like WordPress, which is based on a similar licensing and architecture, it has become the dominant software in its category.",
        "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/27b797857efd9253c0981c09696f579a167062d4/mediawiki/logo.svg",
        "platform": "linux",
        "type": 1,
        "name": "MediaWiki",
        "image": "linuxserver/mediawiki:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "89:80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/mediawiki/html",
                "container": "/var/www/html"
            }],
        "categories": [
                "Other",
                "Wiki"
            ]
    },{
        "title": "AdGuard",
        "description": "[AdGuard] Home is a network-wide software for blocking ads & tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/adguard.png",
        "platform": "linux",
        "type": 1,
        "name": "AdGuard",
        "image": "adguard/adguardhome:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "68:68/tcp",
                "68:68/udp",
                "80:80/tcp",
                "443:443/tcp",
                "853:853/tcp",
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/adguard/workdir",
                "container": "/opt/adguardhome/work"
            },{
                "bind": "/var/lib/docker/volumes/adguard/conf",
                "container": "/opt/adguardhome/conf"
            }],
        "env": [{
                "label": "CONTEXT_PATH",
                "name": "CONTEXT_PATH",
                "set": "adguard home"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "Blender",
        "description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/blender/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Blender",
        "image": "linuxserver/blender:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/blender/config",
                "container": "/config"
            }],
        "env": [{
                "name": "SUBFOLDER",
                "label": "SUBFOLDER",
                "default": "/",
                "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "Booksonic",
        "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/booksonic.png",
        "platform": "linux",
        "type": 1,
        "name": "booksonic",
        "image": "linuxserver/booksonic:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "4040:4040/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/Booksonic/books",
                "container": "/books"
            },{
                "bind": "/var/lib/docker/volumes/Booksonic/podcasts",
                "container": "/podcast"
            },{
                "bind": "/var/lib/docker/volumes/Booksonic/config",
                "container": "/config"
            }],
        "env": [{
                "default": "booksonic",
                "label": "CONTEXT_PATH",
                "name": "CONTEXT_PATH"
            }],
        "categories": [
                "Books",
                "Other"
            ]
    },{
        "title": "Booksonic-air",
        "description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. Booksonic App - An DSub based Android app for connection to Booksonic-Air servers. .",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/booksonic-air/config<br>mkdir -p /volume1/docker/booksonic-air/audiobooks<br>mkdir -p /volume1/docker/booksonic-air/podcasts<br>mkdir -p /volume1/docker/booksonic-air/othermedia</p>", 
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
        "platform": "linux",
        "type": 1,
        "name": "Booksonic-air",
        "image": "linuxserver/booksonic-air:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "4040:4040/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/booksonic-air/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/booksonic-air/audiobooks",
                "container": "/audiobooks"
            },{
                "bind": "/var/lib/docker/volumes/booksonic-air/podcasts",
                "container": "/podcasts"
            },{
                "bind": "/var/lib/docker/volumes/booksonic-air/othermedia",
                "container": "/othermedia"
            }],
        "env": [{
                "default": "url-base",
                "description": "Base url for use with reverse proxies etc.",
                "label": "CONTEXT_PATH",
                "name": "CONTEXT_PATH"
            }],
        "categories": [
                "Audio"
            ]
    },{
        "title": "Caddy",
        "description": "HTTP/2 web server with automatic HTTPS",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
        "platform": "linux",
        "type": 1,
        "name": "Caddy",
        "image": "abiosoft/caddy:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80/tcp",
                "443/tcp",
                "2015/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/caddy/config",
                "container": "/root/.caddy"
            }]
        "categories": [
                "webserver"
            ]
    },{
        "title": "Cloud9",
        "description": "[Cloud9](https://github.com/c9/core) Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cloud9/config<br>mkdir -p /volume1/docker/cloud9/code<br></p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
        "platform": "linux",
        "type": 1,
        "name": "Cloud9",
        "image": "linuxserver/cloud9:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "8000:8000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/cloud9/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/cloud9/code",
                "container": "/code"
            },{
                "bind": "/var/lib/docker/volumes/cloud9/docker.sock",
                "container": "/var/run/docker.sock"
            }],
        "env": [{
                "default": "https://github.com/linuxserver/docker-cloud9.git",
                "description": "Specify a git repo to checkout on first startup",
                "label": "GITURL",
                "name": "GITURL"
            },{
                "default": "",
                "description": "Optionally specify a username for http auth",
                "label": "USERNAME",
                "name": "USERNAME"
            },{
                "default": "",
                "description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)",
                "label": "PASSWORD",
                "name": "PASSWORD"
            }],
        "categories": [
                "Development"
            ]
    },{
        "title": "Code-Server",
        "description": "[Code-Server](https://coder.com) is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/code-server/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
        "platform": "linux",
        "type": 1,
        "name": "Code-Server",
        "image": "linuxserver/code-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "8443:8443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/code-server/config",
                "container": "/config"
            }],
        "env": [{
                "default": "password",
                "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth.",
                "label": "PASSWORD",
                "name": "PASSWORD"
            },{
                "default": "",
                "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below.",
                "label": "HASHED_PASSWORD",
                "name": "HASHED_PASSWORD"
            },{
                "default": "password",
                "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.",
                "label": "SUDO_PASSWORD",
                "name": "SUDO_PASSWORD"
            },{
                "default": "",
                "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
                "label": "SUDO_PASSWORD_HASH",
                "name": "SUDO_PASSWORD_HASH"
            },{
                "default": "code-server.my.domain",
                "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)",
                "label": "PROXY_DOMAIN",
                "name": "PROXY_DOMAIN"
            },{
                "default": "/config/workspace",
                "description": "If this optional variable is set, code-server will open this directory by default",
                "label": "DEFAULT_WORKSPACE",
                "name": "DEFAULT_WORKSPACE"
            }],
        "categories": [
                "Development"
            ]
    },{
        "title": "Codiad",
        "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/codiad-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Cdiad",
        "image": "linuxserver/codiad:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/Codiad/config",
                "container": "/config"
            }]
        "categories": [
                "Code Server"
            ]
    },{
        "title": "Digikam",
        "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/digikam/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
        "platform": "linux",
        "type": 1,
        "name": "Digikam",
        "image": "linuxserver/digikam:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/digikam/config",
                "container": "/config"
            }],
        "env": [{
                "name": "SUBFOLDER",
                "label": "SUBFOLDER",
                "default": "/",
                "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
            }],
        "categories": [
                "Photography"
            ]
    
    
    },{
        "title": "Docker-Compose",
        "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/docker-compose/config</p>",
        "logo": "",
        "platform": "linux",
        "type": 1,
        "name": "Docker-Compose",
        "image": "linuxserver/docker-compose:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80:80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/docker-compose/config",
                "container": "/config"
            }],
        "categories": [
                "Productivity"
            ]
    },{
        "title": "DokuWiki",
        "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dokuwiki/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "DokuWiki",
        "image": "linuxserver/dokuwiki:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/dokuwiki/config",
                "container": "/config"
            }],
        "categories": [
                "Productivity"
            ]
    },{
        "title": "Domoticz",
        "description": "[Domoticz](https://www.domoticz.com) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/domoticz/config</p>",
        "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Domoticz",
        "image": "linuxserver/domoticz:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "8080:8080/tcp",
                "6144:6144/tcp",
                "1443:1443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/domoticz/config",
                "container": "/config"
            }],
        "env": [{
                "default": "domoticz",
                "description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying.",
                "label": "WEBROOT",
                "name": "WEBROOT"
            }],
        "categories": [
                "Automation"
            ]
    },{
        "title": "DoubleCommander",
        "description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doublecommander/config<br>mkdir -p /volume1/docker/doublecommander/data</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "DoubleCommander",
        "image": "linuxserver/doublecommander:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/doublecommander/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/doublecommander/data",
                "container": "/data"
            }],
        "categories": [
                "File Management"
            ]
    },{
        "title": "DuckDNS",
        "description": "[Duckdns](https://duckdns.org/) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/duckdns/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
        "platform": "linux",
        "type": 1,
        "name": "DuckDNS",
        "image": "linuxserver/duckdns:latest",
        "restart_policy": "unless-stopped",
        "volumes": [{
                "bind": "/var/lib/docker/volumes/duckdns/config",
                "container": "/config"
            }],
        "env": [{
                "default": "subdomain1,subdomain2",
                "description": "multiple subdomains allowed, comma separated, no spaces",
                "label": "SUBDOMAINS",
                "name": "SUBDOMAINS"
            },{
                "default": "token",
                "description": "DuckDNS token",
                "label": "TOKEN",
                "name": "TOKEN"
            },{
                "default": "false",
                "description": "Set to `true` to log to file (also need to map /config).",
                "label": "LOG_FILE",
                "name": "LOG_FILE"
            }],
        "categories": [
                "database"
            ]
    },{
        "title": "ElasticSearch",
        "description": "Open-source search and analytics engine",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
        "platform": "linux",
        "type": 1,
        "name": "ElasticSearch",
        "image": "elasticsearch:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "9200/tcp",
                "9300/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/elasticsearch/data",
                "container": "/usr/share/elasticsearch/data"
            }],
        "categories": [
                "database"
            ]
    },{
        "title": "EmulatorJS",
        "description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emulatorjs/data</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "EmulatorJS",
        "image": "linuxserver/emulatorjs:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp",
                "80:80/tcp",
                "4001:4001/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/emulatorjs/data",
                "container": "/data"
            }],
        "env": [{
                "default": "/",
                "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'",
                "label": "SUBFOLDER",
                "name": "SUBFOLDER"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "Firefox",
        "description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/firefox/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "Firefox",
        "image": "linuxserver/firefox:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/firefox/config",
                "container": "/config"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "Gitlab CE",
        "description": "Open-source end-to-end software development platform",
        "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
        "platform": "linux",
        "type": 1,
        "name": "Gitlab CE",
        "image": "gitlab/gitlab-ce:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80/tcp",
                "443/tcp",
                "22/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/gitlab/etc",
                "container": "/etc/gitlab"
            },{
                "bind": "/var/lib/docker/volumes/gitlab/log",
                "container": "/var/log/gitlab"
            },{
                "bind": "/var/lib/docker/volumes/gitlab/opt",
                "container": "/var/opt/gitlab"
            }],
        "categories": [
                "development",
                "project-management"
            ]
    },{
        "title": "Httpd",
        "description": "Open-source HTTP server",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
        "platform": "linux",
        "type": 1,
        "name": "Httpd",
        "image": "httpd:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/Httpd/htdocs"
                "container": "/usr/local/apache2/htdocs/"
            }],
        "categories": [
                "webserver"
            ]
    },{
        "title": "MStream",
        "description": "[Mstream](https://mstream.io/) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mstream/config<br>mkdir -p /volume1/docker/mstream/music</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "MStream",
        "image": "linuxserver/mstream:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/mstream/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/mstream/music",
                "container": "/music"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "Muximux",
        "description": "[Muximux](https://github.com/mescon/Muximux) is a lightweight portal to view & manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/muximux/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Muximux",
        "image": "linuxserver/muximux:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "80:80/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/muximux/config",
                "container": "/config"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "NextCloud",
        "description": "[Nextcloud](https://nextcloud.com/) gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nextcloud/config<br>mkdir -p /volume1/docker/nextcloud/data</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "NextCloud",
        "image": "linuxserver/nextcloud:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "443:443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/nextcloud/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/nextcloud/data",
                "container": "/data"
            }],
        "categories": [
                "Other"
            ]
    },{
        "title": "OpenVPN-AS",
        "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
        "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/openvpn-as-icon.png",    
        "platform": "linux",
        "type": 1,
        "name": "OpenVPN-AS",
        "image": "linuxserver/openvpn-as:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "943/tcp",
                "9443/tcp",
                "1194/udp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/openvpn/config",
                "container": "/config"
            }],
        "env": [{
                "label": "INTERFACE",
                "name": "INTERFACE",
                "set": "eth0"
            },
        "category": [
                "Other"
            ]
    },{
        "title": "OpenVSCode-Server",
        "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openvscode-server/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "OpenVSCode-Server",
        "image": "linuxserver/openvscode-server:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/openvscode-server/config",
                "container": "/config"
            }],
        "env": [{
                "default": "supersecrettoken",
                "description": "Optional security token for accessing the Web UI.",
                "label": "CONNECTION_TOKEN",
                "name": "CONNECTION_TOKEN"
            },{
                "default": "",
                "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`.",
                "label": "CONNECTION_SECRET",
                "name": "CONNECTION_SECRET"
            },{
                "default": "password",
                "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password.",
                "label": "SUDO_PASSWORD",
                "name": "SUDO_PASSWORD"
            },{
                "default": "",
                "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
                "label": "SUDO_PASSWORD_HASH",
                "name": "SUDO_PASSWORD_HASH"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Pi-Hole",
        "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
        "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
        "platform": "linux",
        "type": 1,
        "name": "PiHole",
        "image": "pihole/pihole:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/PiHole/config",
                "container": "/etc/pihole"
            },{
                "bind": "/var/lib/docker/volumes/PiHole/DNS",
                "container": "/etc/dnsmasq.d"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Pylon",
        "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
        "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
        "platform": "linux",
        "type": 1,
        "name": "Pylon",
        "image": "linuxserver/pylon:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3131:3131/tcp"
            ],
        "volumes": [{
                "container": "/config",
                "bind": "/var/lib/docker/volumes/pylon/config"
            },{
                "container": "/code",
                "bind": "/var/lib/docker/volumes/pylon/code"
            }],
        "env": [{
                "name": "GITURL",
                "label": "GITURL",
                "default": "https://github.com/linuxserver/docker-pylon.git",
                "description": "Specify a git repo to checkout on first startup"
            },{
                "name": "PYUSER",
                "label": "PYUSER",
                "default": "myuser",
                "description": "Specify a basic auth user."
            },{
                "name": "PYPASS",
                "label": "PYPASS",
                "default": "mypass",
                "description": "Specify a basic auth password."
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "RDesktop",
        "description": "[Rdesktop](http://xrdp.org/) - Ubuntu based containers containing full desktop environments in officially supported flavors accessible via RDP.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p><br>mkdir -p /volume1/docker/rdesktop/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
        "platform": "linux",
        "type": 1,
        "name": "Rdesktop",
        "image": "linuxserver/rdesktop:latest",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "ports": [
                "3389:3389/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/rdesktop/docker.sock",
                "container": "/var/run/docker.sock"
            },{
                "bind": "/var/lib/docker/volumes/rdesktop/config",
                "container": "/config"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Remmina",
        "description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/remmina/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "Remmina",
        "image": "linuxserver/remmina:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/remmina/config",
                "container": "/config"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Taisun",
        "description": "[Taisun](https://www.taisun.io/) is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server. Taisun allows you to: - Deploy and manage web based virtual desktops. - Deploy Taisun specific stacks of applications - Browse available images on popular Docker repositories - Import a Docker project from any git repository and start developing on your choice of web based IDE or full Linux desktop - Spinup a developer container based on popular frameworks and work from a web based IDE - Single click remote server access to Taisun and your Docker applications",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p></p>",
        "logo": "https://raw.githubusercontent.com/Taisun-Docker/taisun/master/public/favicon/apple-icon-180x180.png",
        "platform": "linux",
        "type": 1,
        "name": "Taisun",
        "image": "linuxserver/taisun:latest",
        "restart_policy": "unless-stopped"
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "container": "/var/run/docker.sock",
                "bind": "/var/lib/docker/volumes/Taisun/docker.sock"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Uptime Kuma",
        "description": "It is a self-hosted monitoring tool like Uptime Robot",
        "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
        "platform": "linux",
        "type": 1,
        "name": "Uptime-Kuma",
        "image": "louislam/uptime-kuma:latest",
        "restart_policy": "always",
        "ports": [
                "3001:3001/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/UptimeKuma/config",
                "container": "/app/data"
            }],
        "categories": [
                "Other
            ]
    },{
        "title": "WebTop",
        "description": "[Webtop](https://github.com/linuxserver/docker-webtop) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webtop/config<br></p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
        "platform": "linux",
        "type": 1,
        "name": "WebTop",
        "image": "linuxserver/webtop:latest",
        "restart_policy": "unless-stopped",
        "privileged": true,
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/webtop/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/webtop/docker.sock",
                "container": "/var/run/docker.sock"
            }],
        "env": [{
                "default": "/",
                "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
                "label": "SUBFOLDER",
                "name": "SUBFOLDER"
            }],
         "categories": [
                "Utilities"
            ]
    },{
        "title": "WireGuard",
        "description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireguard/config<br></p>",
        "logo": "https://www.wireguard.com/img/wireguard.svg",
        "platform": "linux",
        "type": 1,
        "name": "WireGuard",
        "image": "linuxserver/wireguard:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "51820:51820/udp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/wireguard/config",
                "container": "/config"
            },{
                "bind": "/var/lib/docker/volumes/wireguard/modules",
                "container": "/lib/modules"
            }],
        "env": [{
                "default": "wireguard.domain.com",
                "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically",
                "label": "SERVERURL",
                "name": "SERVERURL"
            },{
                "default": "51820",
                "description": "External port for docker host. Used in server mode.",
                "label": "SERVERPORT",
                "name": "SERVERPORT"
            },{
                "default": "1",
                "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)",
                "label": "PEERS",
                "name": "PEERS"
            },{
                "default": "auto",
                "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward.",
                "label": "PEERDNS",
                "name": "PEERDNS"
            },{
                "default": "10.13.13.0",
                "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.",
                "label": "INTERNAL_SUBNET",
                "name": "INTERNAL_SUBNET"
            },{
                "default": "0.0.0.0/0",
                "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1.",
                "label": "ALLOWEDIPS",
                "name": "ALLOWEDIPS"
            }],
        "categories": [
                "Utilities"
            ]
    },{
        "title": "WireShark",
        "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
        "platform": "linux",
        "type": 1,
        "name": "WireShark",
        "image": "linuxserver/wireshark:latest",
        "restart_policy": "unless-stopped",
        "network": "host",
        "ports": [
                "3000:3000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/wireshark/config",
                "container": "/config"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    },{
        "title": "Whoogle",
        "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/whoogle.png",
        "platform": "linux",
        "type": 1,
        "name": "whoogle",
        "image": "benbusby/whoogle-search:latest",
        "restart_policy": "unless-stopped",
        "ports": [
                "5001:5000/tcp"
            ],
        "volumes": [{
                "bind": "/var/lib/docker/volumes/Whoogle/config",
                "container": "/config"
            }],
        "categories": [
                "Other",
                "Tools"
            ]
    }
]}
